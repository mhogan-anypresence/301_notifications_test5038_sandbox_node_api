this["JST"] = this["JST"] || {};

this["JST"]["assets/templates/views/partials/analytics/analytics.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<style>\n    .full {\n        width: 100%;\n    }\n    .no-data {\n        text-align: center;\n        margin-top: 15px;\n    }\n    .top-margin {\n        margin-top: 15px;\n    }\n</style>\n\n<div class="page-header">\n  <h1>Analytics</h1>\n</div>\n\n<div class="row full">\n  <div class="col-xs-12 page-header">\n    <h3>Filters</h3>\n  </div>\n  <div class="col-xs-12">\n    <div>\n      <label class="row full">\n        <span class="col-xs-3">From:</span>\n        <div class="col-xs-5">\n          <input style="width: 100%;" type="date" name="from-date" ng-model="filters.start">\n        </div>\n      </label>\n    </div>\n    <div>\n      <label class="row full">\n        <span class="col-xs-3">To:</span>\n        <div class="col-xs-5">\n          <input style="width: 100%;" type="date" name="to-date" ng-model="filters.end">\n        </div>\n      </label>\n    </div>\n    <div>\n      <label class="row full">\n        <span class="col-xs-3">Version:</span>\n        <div class="col-xs-5">\n          <select\n          class="form-control"\n          ng-model="filters.version"\n          ng-change="versionChanged()"\n          ng-options="v for v in filters.versions">\n            <option>None selected</option>\n          </select>\n        </div>\n      </label>\n    </div>\n    <div>\n      <label class="row full">\n        <span class="col-xs-3">Model:</span>\n        <div class="col-xs-5">\n          <select\n          class="form-control"\n          ng-model="filters.model"\n          ng-options="m for m in filters.models">\n            <option>None selected</option>\n          </select>\n        </div>\n      </label>\n    </div>\n    <div class="row full">\n      <div class="col-xs-offset-3 col-xs-5">\n        <button\n        type="button"\n        class="full btn btn-lg btn-primary"\n        ng-click="requestData()">\n          Apply\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div ng-show="alerts.has.warning">\n  <div class="alert alert-warning top-margin">\n    <span ng-model="alerts.warning">{{alerts.warning.message}}</span>\n  </div>\n</div>\n\n<div ng-if="!plotInitialized">\n  <div class="row">\n    <div class="col-xs-12 jumbotron no-data">\n      <h3>Select filters to apply</h3>\n    </div>\n  </div>\n</div>\n\n<div ng-if="!chartHasValues">\n  <div class="row">\n    <div class="col-xs-12 jumbotron no-data">\n      <h3>No information available</h3>\n    </div>\n  </div>\n</div>\n\n<div ng-if="plotInitialized && chartHasValues">\n\n\n  <div class="row full">\n    <div class="col-xs-12 page-header">\n      <h3>Average Response Time</h3>\n    </div>\n    <div class="col-xs-12">\n      <linechart data="avg_rsp_time_series" options="avg_rsp_time_options" mode="" height="300"></linechart>\n    </div>\n  </div>\n\n\n  <div class="row full">\n    <div class="col-xs-12 page-header">\n      <h3>Average Response Size</h3>\n    </div>\n    <div class="col-xs-12">\n      <linechart data="avg_rsp_size_series" options="avg_rsp_size_options" mode="" height="300"></linechart>\n    </div>\n  </div>\n\n\n\n  <div class="row full">\n    <div class="col-xs-12 page-header">\n      <h3>Count</h3>\n    </div>\n    <div class="col-xs-12">\n      <linechart data="count_series" options="count_options" mode="" height="300"></linechart>\n    </div>\n  </div>\n\n\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/docs.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h1><strong><em>notificationstest</em></strong> API Documentation</h1>\n\n<h2>Description</h2>\n\n<p>This document contains all relevant API information for the application &quot;notificationstest&quot;.</p>\n\n<h2>Table of Contents</h2>\n\n<ul>\n<li><a href="#/docs#installing-dependencies">Installing Dependencies</a>\n\n<ul>\n<li><a href="#/docs#node-and-npm">Node and NPM</a></li>\n<li><a href="#/docs#dependencies">Dependencies</a></li>\n</ul></li>\n<li><a href="#/docs#seeding-the-app">Seeding the App</a></li>\n<li><a href="#/docs#running-the-app">Running the App</a>\n\n<ul>\n<li><a href="#/docs#development-vs-production-mode">Development vs. Production Mode</a></li>\n</ul></li>\n<li><a href="#/docs#running-the-test-suite">Running the Test Suite</a></li>\n<li><a href="#/docs#connecting-to-the-app-console">Connecting to the App Console</a></li>\n<li><a href="#/docs#jobs-and-scheduling">Jobs and Scheduling</a>\n\n<ul>\n<li><a href="#/docs#manually-executing-jobs">Manually Executing Jobs</a></li>\n</ul></li>\n<li><a href="#/docs#authentication">Authentication</a></li>\n<li><a href="#/docs#crud-and-query-scope-requests">CRUD and Query Scope Requests</a></li>\n<li><a href="#/docs#push-notifications">Push Notifications</a></li>\n<li><a href="#/docs#file-uploads">File Uploads</a></li>\n<li><a href="#/docs#programmatic-crud-and-query-scope-calls">Programmatic CRUD and Query Scope Calls</a></li>\n<li><a href="#/docs#roles">Roles</a></li>\n<li><a href="#/docs#api-versions">API Versions</a></li>\n<li><a href="#/docs#storage-interfaces">Storage Interfaces</a></li>\n</ul>\n\n<h2><a name="installing-dependencies"></a> Installing Dependencies</h2>\n\n<h3><a name=\'node-and-npm\'></a> Node and NPM</h3>\n\n<p>The link at the bottom of this section contains all the installers for node.\nThis applications engines are located in the package.json file or below:</p>\n\n<pre><code class="json">{\n  &#39;node&#39;: &#39;4.4.3&#39;,\n  &#39;npm&#39;: &#39;2.15.1&#39;\n}\n</code></pre>\n\n<p>From the above example, you would find the v4.4.3 installer for your platform\nand use that to setup node. Note that the installer also includes NPM and\nshould already be the correct version listed here and in the package.json file.</p>\n\n<p><a href="https://nodejs.org/dist/">Node Distributables</a></p>\n\n<h3><a name=\'dependencies\'></a> Dependencies</h3>\n\n<p>Once you have node and NPM installed, you can install the global dependencies\nrequired by the application as well as all the local dependencies the application\nrequires to run. All of those commands should be executed from the application&#39;s\nroot directory, unless noted otherwise.</p>\n\n<p>First, install grunt-cli in order to execute grunt tasks:</p>\n\n<pre><code>npm install grunt-cli -g\n</code></pre>\n\n<p>Next, install all of the application&#39;s local dependencies. This could take a while\nas it downloads and compiles all dependencies.</p>\n\n<pre><code>npm install\n</code></pre>\n\n<p>You will also need to install MongoDB and have it running on your system locally.\nVisit the link below for instructions on setting up MongoDB for your platform:</p>\n\n<h3><a href="http://docs.mongodb.org/manual/installation/">MongoDB Installation Instructions</a></h3>\n\n<h3>Oracle database dependencies</h3>\n\n<p>Oracle database requires Oracle 11.2 or 12.1 client libraries. These are included in Oracle Instant Client RPMs or ZIPs, \na full Oracle Client, or a database on the same machine.  Oracle&#39;s standard client-server network compatibility applies, \nwhich enables connection to databases with different versions from the Oracle client library version.</p>\n\n<p>Python 2.7 is needed for node-gyp.  Gcc is needed on Linux.  On OS X, install Xcode.</p>\n\n<p>Download the free &#39;Basic&#39; and &#39;SDK&#39; RPMs from <a href="http://www.oracle.com/technetwork/topics/linuxx86-64soft-092277.html">Oracle Technology Network</a> and\n<a href="http://www.oracle.com/technetwork/topics/linuxx86-64soft-092277.html#ic_x64_inst">install them</a> as the root user:\n<a href="http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html">Oracle Instant Client</a></p>\n\n<h2><a name="seeding-the-app"></a> Seeding the App</h2>\n\n<p>Everything should be in place to run the application. First, we&#39;ll need to seed\nthe initial database with the admin account. </p>\n\n<p>If you have <a href="https://github.com/ddollar/forego">Forego</a> installed on your machine \nyou can execute the following command:</p>\n\n<pre><code>forego run grunt seed\n</code></pre>\n\n<p>If you do not have forego installed, you can use the locally installed node implementation\nby executing:</p>\n\n<pre><code>node ./node_modules/foreman/nf run grunt seed\n</code></pre>\n\n<p>Please note that the path ./node_modules/foreman/nf may have to change if you&#39;re running on \na Windows machine.</p>\n\n<p>Once that has finished, you can locate your default username and password by\nexecuting the following command (on Linux or Mac OS):</p>\n\n<pre><code>grep -A1 email tasks/config/createAdmin.js\n</code></pre>\n\n<p>Which should produce something like:</p>\n\n<pre><code>email: &quot;test@fizz.com&quot;,\npassword: &quot;a9c6bd1ac688b671&quot;\n</code></pre>\n\n<p>Otherwise, the fields are located in the file:</p>\n\n<pre><code>tasks/config/createAdmin.js\n</code></pre>\n\n<h2><a name="running-the-app"></a> Running the App</h2>\n\n<p>Executing the following command will start the web server and the background\nprocesses such as the job scheduler:</p>\n\n<pre><code>PORT=1337 npm start\n</code></pre>\n\n<p>And browse to:</p>\n\n<h3><a href="http://localhost:1337/admin">http://localhost:1337/admin</a></h3>\n\n<p>You can adjust the port by changing the PORT environment variable.</p>\n\n<pre><code>PORT=2222 npm start\n</code></pre>\n\n<p>You can also adjust the instance scaling using the npm script. For example if\nyou wanted to have 3 instances of the web process running:</p>\n\n<pre><code>npm start web=3\n</code></pre>\n\n<p>Each process will be started on a separate port, starting from the default or supplied\nport and incrementing up. In this example the default port 5000 would be used and the \ninstances would be listening on ports 5000, 5001 and 5002.</p>\n\n<h3><a name="development-vs-production-mode"></a> Development vs. Production Mode</h3>\n\n<p>You can also use this to execute the app in <strong>production</strong> vs <strong>development</strong>\nmode.</p>\n\n<pre><code>NODE_ENV=production npm start\n</code></pre>\n\n<p>Providing no argument for NODE_ENV starts the app in <strong>development</strong> mode by default.</p>\n\n<h2><a name="running-the-test-suite"></a> Running the Test Suite</h2>\n\n<p>To run the application&#39;s test suite, execute the following command:</p>\n\n<pre><code>npm test\n</code></pre>\n\n<p>You can add custom API test files to:</p>\n\n<pre><code>test/server/\n</code></pre>\n\n<p>Any tests in this folder will be included in the test suite.</p>\n\n<h2><a name="connecting-to-the-app-console"></a> Connecting to the App Console</h2>\n\n<p>The sails framework can also be started in interactive mode with a console.\nTo use the console execute:</p>\n\n<pre><code>PORT=1337 npm run console\n</code></pre>\n\n<p>Set the port to any available port that the current application is not running on.</p>\n\n<h2><a name=\'jobs-and-scheduling\'></a> Jobs and Scheduling</h2>\n\n<p>The job scheduler will start automatically when starting the server process using using the\npreviously mentioned npm script.</p>\n\n<p>You should see logs from the <strong>clock</strong> process in your output regarding scheduled jobs. The scheduler\nwill only schedule and execute the most recent version of your jobs, it will not queue any previous API\nversion&#39;s jobs.</p>\n\n<h3><a name="manually-executing-jobs"></a> Manually Executing Jobs</h3>\n\n<p>If you&#39;d like to run a job manually or from a script, you can execute the following command from\nthe root directory of our application:</p>\n\n<pre><code>npm run job &lt;job_name&gt;\n</code></pre>\n\n<p>Replacing &lt;job_name&gt; with the name you used to create the job. For example, if you created a job called\n&quot;MonthlyReport&quot;, you would execute:</p>\n\n<pre><code>npm run job MonthlyReport\n</code></pre>\n\n<p>You can also, optionally, supply an API version of the job if you&#39;d like to execute a specific\nversion of the job:</p>\n\n<pre><code>npm run job MonthlyReport 2\n</code></pre>\n\n<p>This command would execute version 2 of the MonthlyReport job.</p>\n\n<h2><a name="authentication"></a> Authentication</h2>\n\n<h2>Password (Password) Authentication Strategy</h2>\n\n<p>To login and create a session with the password strategy, simply make a POST\nto following path:</p>\n\n<pre><code>POST /auth/Password/callback\n</code></pre>\n\n<p>Alternatively, you can specify the API version you wish to authenticate against:</p>\n\n<pre><code>POST /auth/v1/Password/callback\n</code></pre>\n\n<p>With a body similar to the following:</p>\n\n<pre><code>{\n  &quot;username&quot;: &quot;test&quot;,\n  &quot;password&quot;: &quot;password&quot;\n}\n</code></pre>\n\n<p>The result of the above call, if the credentials are valid, should be a JSON object\ncontaining all of the session details.</p>\n\n<h2><a name="crud-and-query-scope-requests"></a> CRUD and Query Scope Requests</h2>\n\n<h2>NotificationLog</h2>\n\n<p><strong>/api/v1/notification_logs</strong> OR <strong>/api/notification_logs</strong></p>\n\n<p>Example payload:\n<code>\n{&quot;message&quot;:&quot;Mohammedanisms moistest&quot;,&quot;notificationType&quot;:&quot;Prelates inconsequential&quot;,&quot;sentAt&quot;:&quot;2013-11-08&quot;,&quot;userName&quot;:&quot;Pertinent horrors&quot;}</code></p>\n\n<h3>Create</h3>\n\n<p>To create a NotificationLog, make a POST like below using a body similar\nto the example payload.</p>\n\n<pre><code>POST /api/notification_logs\n</code></pre>\n\n<h3>Read</h3>\n\n<p>To request a specific NotificationLog object, make a GET using the following\nURL:</p>\n\n<pre><code>GET /api/notification_logs/&lt;id&gt;\n</code></pre>\n\n<p>Replace &quot;id&quot; with the id value for the object.</p>\n\n<p>The read route also supports scopes, both custom and default. To learn more about\nexecuting scopes see the section below.</p>\n\n<h3>Update</h3>\n\n<p>To update an object, make PUT or POST to the following URL:</p>\n\n<pre><code>PUT or POST /api/notification_logs/&lt;id&gt;\n</code></pre>\n\n<p>Replace &quot;id&quot; with the id value for the object.\nThe body of the call should contain the new values.</p>\n\n<h3>Destroy</h3>\n\n<p>To destroy an object, make a DELETE to the following URL:</p>\n\n<pre><code>DELETE /api/notification_logs/&lt;id&gt;\n</code></pre>\n\n<p>Replace &quot;id&quot; with the id value for the object.</p>\n\n<h3>Scopes</h3>\n\n<p>Available scopes for NotificationLog:</p>\n\n<table><thead>\n<tr>\n<th>Name</th>\n<th>Javascript Name</th>\n<th>Description</th>\n</tr>\n</thead><tbody>\n<tr>\n<td>all</td>\n<td>allScope</td>\n<td>Returns all instances</td>\n</tr>\n<tr>\n<td>exact_match</td>\n<td>exactMatchScope</td>\n<td>Returns all instances that match the provided fields exactly</td>\n</tr>\n<tr>\n<td>count</td>\n<td>countScope</td>\n<td>Counts all instances</td>\n</tr>\n<tr>\n<td>count<em>exact</em>match</td>\n<td>countExactMatchScope</td>\n<td>Counts all instances that match the provided fields exactly</td>\n</tr>\n</tbody></table>\n\n<p>To execute a scope query:</p>\n\n<pre><code>GET /api/notification_logs?scope=&lt;scope_name&gt;\n</code></pre>\n\n<p>Replace &quot;scope_name&quot; with the value in the name column in the above table. Some scopes\nmay require additional query parameters, for example:</p>\n\n<pre><code>GET /api/notification_logs?scope=custom&amp;query[first_name]=bob\n</code></pre>\n\n<p>Use query[field] pattern to send a value to the scope operation.</p>\n\n<h2>Order</h2>\n\n<p><strong>/api/v1/orders</strong> OR <strong>/api/orders</strong></p>\n\n<p>Example payload:\n<code>\n{&quot;desc&quot;:&quot;Academically ruddier&quot;,&quot;name&quot;:&quot;Jack Kovacek&quot;}</code></p>\n\n<h3>Create</h3>\n\n<p>To create a Order, make a POST like below using a body similar\nto the example payload.</p>\n\n<pre><code>POST /api/orders\n</code></pre>\n\n<h3>Read</h3>\n\n<p>To request a specific Order object, make a GET using the following\nURL:</p>\n\n<pre><code>GET /api/orders/&lt;id&gt;\n</code></pre>\n\n<p>Replace &quot;id&quot; with the id value for the object.</p>\n\n<p>The read route also supports scopes, both custom and default. To learn more about\nexecuting scopes see the section below.</p>\n\n<h3>Update</h3>\n\n<p>To update an object, make PUT or POST to the following URL:</p>\n\n<pre><code>PUT or POST /api/orders/&lt;id&gt;\n</code></pre>\n\n<p>Replace &quot;id&quot; with the id value for the object.\nThe body of the call should contain the new values.</p>\n\n<h3>Destroy</h3>\n\n<p>To destroy an object, make a DELETE to the following URL:</p>\n\n<pre><code>DELETE /api/orders/&lt;id&gt;\n</code></pre>\n\n<p>Replace &quot;id&quot; with the id value for the object.</p>\n\n<h3>Scopes</h3>\n\n<p>Available scopes for Order:</p>\n\n<table><thead>\n<tr>\n<th>Name</th>\n<th>Javascript Name</th>\n<th>Description</th>\n</tr>\n</thead><tbody>\n<tr>\n<td>all</td>\n<td>allScope</td>\n<td>Returns all instances</td>\n</tr>\n<tr>\n<td>exact_match</td>\n<td>exactMatchScope</td>\n<td>Returns all instances that match the provided fields exactly</td>\n</tr>\n<tr>\n<td>count</td>\n<td>countScope</td>\n<td>Counts all instances</td>\n</tr>\n<tr>\n<td>count<em>exact</em>match</td>\n<td>countExactMatchScope</td>\n<td>Counts all instances that match the provided fields exactly</td>\n</tr>\n</tbody></table>\n\n<p>To execute a scope query:</p>\n\n<pre><code>GET /api/orders?scope=&lt;scope_name&gt;\n</code></pre>\n\n<p>Replace &quot;scope_name&quot; with the value in the name column in the above table. Some scopes\nmay require additional query parameters, for example:</p>\n\n<pre><code>GET /api/orders?scope=custom&amp;query[first_name]=bob\n</code></pre>\n\n<p>Use query[field] pattern to send a value to the scope operation.</p>\n\n<h2>SendGrid</h2>\n\n<p><strong>/api/v1/send_grids</strong> OR <strong>/api/send_grids</strong></p>\n\n<p>Example payload:\n<code>\n{&quot;emailFrom&quot;:&quot;Pathologically overviews&quot;,&quot;emailTo&quot;:&quot;Pursuance shelve&quot;,&quot;message&quot;:&quot;Professionally steakhouse&quot;,&quot;subject&quot;:&quot;Toned overcompensated&quot;}</code></p>\n\n<h3>Create</h3>\n\n<p>To create a SendGrid, make a POST like below using a body similar\nto the example payload.</p>\n\n<pre><code>POST /api/send_grids\n</code></pre>\n\n<h3>Read</h3>\n\n<p>To request a specific SendGrid object, make a GET using the following\nURL:</p>\n\n<pre><code>GET /api/send_grids/&lt;id&gt;\n</code></pre>\n\n<p>Replace &quot;id&quot; with the id value for the object.</p>\n\n<p>The read route also supports scopes, both custom and default. To learn more about\nexecuting scopes see the section below.</p>\n\n<h3>Update</h3>\n\n<p>To update an object, make PUT or POST to the following URL:</p>\n\n<pre><code>PUT or POST /api/send_grids/&lt;id&gt;\n</code></pre>\n\n<p>Replace &quot;id&quot; with the id value for the object.\nThe body of the call should contain the new values.</p>\n\n<h3>Destroy</h3>\n\n<p>To destroy an object, make a DELETE to the following URL:</p>\n\n<pre><code>DELETE /api/send_grids/&lt;id&gt;\n</code></pre>\n\n<p>Replace &quot;id&quot; with the id value for the object.</p>\n\n<h3>Scopes</h3>\n\n<p>Available scopes for SendGrid:</p>\n\n<table><thead>\n<tr>\n<th>Name</th>\n<th>Javascript Name</th>\n<th>Description</th>\n</tr>\n</thead><tbody>\n<tr>\n<td>all</td>\n<td>allScope</td>\n<td>Returns all instances</td>\n</tr>\n<tr>\n<td>exact_match</td>\n<td>exactMatchScope</td>\n<td>Returns all instances that match the provided fields exactly</td>\n</tr>\n<tr>\n<td>count</td>\n<td>countScope</td>\n<td>Counts all instances</td>\n</tr>\n<tr>\n<td>count<em>exact</em>match</td>\n<td>countExactMatchScope</td>\n<td>Counts all instances that match the provided fields exactly</td>\n</tr>\n</tbody></table>\n\n<p>To execute a scope query:</p>\n\n<pre><code>GET /api/send_grids?scope=&lt;scope_name&gt;\n</code></pre>\n\n<p>Replace &quot;scope_name&quot; with the value in the name column in the above table. Some scopes\nmay require additional query parameters, for example:</p>\n\n<pre><code>GET /api/send_grids?scope=custom&amp;query[first_name]=bob\n</code></pre>\n\n<p>Use query[field] pattern to send a value to the scope operation.</p>\n\n<h2>Twilio</h2>\n\n<p><strong>/api/v1/twilios</strong> OR <strong>/api/twilios</strong></p>\n\n<p>Example payload:\n<code>\n{&quot;message&quot;:&quot;Infested exhilarating&quot;,&quot;toPhoneNumber&quot;:&quot;Encouragements foreswore&quot;}</code></p>\n\n<h3>Create</h3>\n\n<p>To create a Twilio, make a POST like below using a body similar\nto the example payload.</p>\n\n<pre><code>POST /api/twilios\n</code></pre>\n\n<h3>Read</h3>\n\n<p>To request a specific Twilio object, make a GET using the following\nURL:</p>\n\n<pre><code>GET /api/twilios/&lt;id&gt;\n</code></pre>\n\n<p>Replace &quot;id&quot; with the id value for the object.</p>\n\n<p>The read route also supports scopes, both custom and default. To learn more about\nexecuting scopes see the section below.</p>\n\n<h3>Update</h3>\n\n<p>To update an object, make PUT or POST to the following URL:</p>\n\n<pre><code>PUT or POST /api/twilios/&lt;id&gt;\n</code></pre>\n\n<p>Replace &quot;id&quot; with the id value for the object.\nThe body of the call should contain the new values.</p>\n\n<h3>Destroy</h3>\n\n<p>To destroy an object, make a DELETE to the following URL:</p>\n\n<pre><code>DELETE /api/twilios/&lt;id&gt;\n</code></pre>\n\n<p>Replace &quot;id&quot; with the id value for the object.</p>\n\n<h3>Scopes</h3>\n\n<p>Available scopes for Twilio:</p>\n\n<table><thead>\n<tr>\n<th>Name</th>\n<th>Javascript Name</th>\n<th>Description</th>\n</tr>\n</thead><tbody>\n<tr>\n<td>all</td>\n<td>allScope</td>\n<td>Returns all instances</td>\n</tr>\n<tr>\n<td>exact_match</td>\n<td>exactMatchScope</td>\n<td>Returns all instances that match the provided fields exactly</td>\n</tr>\n<tr>\n<td>count</td>\n<td>countScope</td>\n<td>Counts all instances</td>\n</tr>\n<tr>\n<td>count<em>exact</em>match</td>\n<td>countExactMatchScope</td>\n<td>Counts all instances that match the provided fields exactly</td>\n</tr>\n</tbody></table>\n\n<p>To execute a scope query:</p>\n\n<pre><code>GET /api/twilios?scope=&lt;scope_name&gt;\n</code></pre>\n\n<p>Replace &quot;scope_name&quot; with the value in the name column in the above table. Some scopes\nmay require additional query parameters, for example:</p>\n\n<pre><code>GET /api/twilios?scope=custom&amp;query[first_name]=bob\n</code></pre>\n\n<p>Use query[field] pattern to send a value to the scope operation.</p>\n\n<h2>User</h2>\n\n<p><strong>/api/v1/users</strong> OR <strong>/api/users</strong></p>\n\n<p>Example payload:\n<code>\n{&quot;emailAddress&quot;:&quot;latricia.toy18@notificationstest.com&quot;,&quot;password&quot;:&quot;password&quot;,&quot;passwordConfirmation&quot;:&quot;password&quot;,&quot;passwordDigest&quot;:&quot;Adamantly appertaining&quot;,&quot;phoneNumber&quot;:&quot;Unattended disenchantment&quot;,&quot;role&quot;:&quot;Valedictorians demonstrated&quot;,&quot;sendPushNotifications&quot;:true,&quot;sendSendgridNotifications&quot;:true,&quot;sendTwilioNotifications&quot;:false,&quot;username&quot;:&quot;Pints Sally&quot;,&quot;xSessionId&quot;:&quot;Manhandled cinematographer&quot;}</code></p>\n\n<h3>Create</h3>\n\n<p>To create a User, make a POST like below using a body similar\nto the example payload.</p>\n\n<pre><code>POST /api/users\n</code></pre>\n\n<h3>Read</h3>\n\n<p>To request a specific User object, make a GET using the following\nURL:</p>\n\n<pre><code>GET /api/users/&lt;id&gt;\n</code></pre>\n\n<p>Replace &quot;id&quot; with the id value for the object.</p>\n\n<p>The read route also supports scopes, both custom and default. To learn more about\nexecuting scopes see the section below.</p>\n\n<h3>Update</h3>\n\n<p>To update an object, make PUT or POST to the following URL:</p>\n\n<pre><code>PUT or POST /api/users/&lt;id&gt;\n</code></pre>\n\n<p>Replace &quot;id&quot; with the id value for the object.\nThe body of the call should contain the new values.</p>\n\n<h3>Destroy</h3>\n\n<p>To destroy an object, make a DELETE to the following URL:</p>\n\n<pre><code>DELETE /api/users/&lt;id&gt;\n</code></pre>\n\n<p>Replace &quot;id&quot; with the id value for the object.</p>\n\n<h3>Scopes</h3>\n\n<p>Available scopes for User:</p>\n\n<table><thead>\n<tr>\n<th>Name</th>\n<th>Javascript Name</th>\n<th>Description</th>\n</tr>\n</thead><tbody>\n<tr>\n<td>all</td>\n<td>allScope</td>\n<td>Returns all instances</td>\n</tr>\n<tr>\n<td>exact_match</td>\n<td>exactMatchScope</td>\n<td>Returns all instances that match the provided fields exactly</td>\n</tr>\n<tr>\n<td>count</td>\n<td>countScope</td>\n<td>Counts all instances</td>\n</tr>\n<tr>\n<td>count<em>exact</em>match</td>\n<td>countExactMatchScope</td>\n<td>Counts all instances that match the provided fields exactly</td>\n</tr>\n<tr>\n<td>my<em>user</em>record</td>\n<td>myUserRecordScope</td>\n<td>Return user record for current user</td>\n</tr>\n</tbody></table>\n\n<p>To execute a scope query:</p>\n\n<pre><code>GET /api/users?scope=&lt;scope_name&gt;\n</code></pre>\n\n<p>Replace &quot;scope_name&quot; with the value in the name column in the above table. Some scopes\nmay require additional query parameters, for example:</p>\n\n<pre><code>GET /api/users?scope=custom&amp;query[first_name]=bob\n</code></pre>\n\n<p>Use query[field] pattern to send a value to the scope operation.</p>\n\n<h2><a name="push-notifications"></a> Push Notifications</h2>\n\n<h2>Subscribe</h2>\n\n<p><strong>Does NOT require authentication</strong></p>\n\n<p>The supplied token (device identifier) will be subscribed to the provided channel\nbelonging to either the supplied appName or the default application. If the channel\ndoes not exist it will be created using the supplied channelName. If the device\ndoes not exist it will also be created using the supplied token, provider and name.</p>\n\n<h4>POST /api/push_notifications/channel/subscribe</h4>\n\n<pre><code>{\n  channelName: &#39;News&#39;,\n  appName: &#39;someApp&#39;,\n  token: &#39;Test&#39;,\n  provider: &#39;APPLE&#39;,\n  name: &quot;Frank&#39;s iPhone&quot;\n}\n</code></pre>\n\n<h4>RESPONSE</h4>\n\n<pre><code>{\n  &quot;channels&quot;: [\n    {\n      &quot;name&quot;: &quot;News&quot;,\n      &quot;app&quot;: &quot;569938c1df324340867cfa29&quot;,\n      &quot;compositeName&quot;: &quot;News569938c1df324340867cfa29&quot;,\n      &quot;id&quot;: &quot;56a123121d1032a75980fa92&quot;\n    }\n  ],\n  &quot;app&quot;: &quot;569938c1df324340867cfa29&quot;,\n  &quot;identifier&quot;: &quot;Test&quot;,\n  &quot;name&quot;: &quot;Frank&#39;s iPhone&quot;,\n  &quot;provider&quot;: &quot;APPLE&quot;,\n  &quot;compositeIdentifier&quot;: &quot;Test569938c1df324340867cfa29&quot;,\n  &quot;id&quot;: &quot;56a151fb9af0741278fe0782&quot;\n}\n</code></pre>\n\n<p><strong>channelName</strong> should be an existing channel or a channel you wish to be created.</p>\n\n<p><strong>appName</strong> <em>optional</em> should contain the name of the app you&#39;re dealing with. If it is not supplied the default application will be used.</p>\n\n<p><strong>token</strong> is the identifier token provided by APN or GCM.</p>\n\n<p><strong>provider</strong> <em>optional</em> is either &#39;APPLE&#39; or &#39;GOOGLE&#39;. Only needs to be provided if you expect the device to not exist and needs to be created. The value will be the new device&#39;s provider.</p>\n\n<p><strong>name</strong> <em>optional</em> Can be a string identifier for the device for friendlier display to users. Only needs to be provided if you expect the device to not exist and needs to be created.</p>\n\n<p>The successful response will contain the device as well as any channels it&#39;s subscribed to, including the newly subscribed channel.</p>\n\n<h3>Subscribe in custom code</h3>\n\n<p>You can also execute the subscribe method directly in your custom code. For example:</p>\n\n<pre><code>/*\n * The parameters for subscribe in order are:\n * token : Identifier provided by APN or GCM.\n * provider : &#39;APPLE&#39; or &#39;GOOGLE&#39;.\n * name : A nickname for the device.\n * appId : The push application.\n * channelName : The channel belonging to appId&#39;s app.\n * cb : function\n */\nthis.push.subscribe(&quot;abc123&quot;, &quot;APPLE&quot;, &quot;Example&#39;s iPhone&quot;, &quot;569938c1df324340867cfa29&quot;, &quot;Alerts&quot;, function(err, result) {\n  // &quot;result&quot; will be the device and it&#39;s associated channels.\n});\n</code></pre>\n\n<p>The behavior is the same as using the API endpoint. If a channel does not exist, it will be created. If the device does not exist it, will be created\nusing the provider, name and token.</p>\n\n<h2>Unsubscribe</h2>\n\n<p><strong>Does NOT require authentication</strong></p>\n\n<p>Removes the supplied device token from the channel. If the device is not subscribed to the provided channel an error is returned.</p>\n\n<h4>POST /api/push_notifications/channel/unsubscribe</h4>\n\n<pre><code>{\n  channelName: &#39;News&#39;,\n  appName: &#39;someApp&#39;,\n  token: &#39;Test&#39;\n}\n</code></pre>\n\n<h4>RESPONSE</h4>\n\n<pre><code>{\n  &quot;channels&quot;: [ ],\n  &quot;app&quot;: &quot;569938c1df324340867cfa29&quot;,\n  &quot;identifier&quot;: &quot;Test&quot;,\n  &quot;name&quot;: &quot;Frank&#39;s iPhone&quot;,\n  &quot;provider&quot;: &quot;APPLE&quot;,\n  &quot;compositeIdentifier&quot;: &quot;Test569938c1df324340867cfa29&quot;,\n  &quot;id&quot;: &quot;56a151fb9af0741278fe0782&quot;\n}\n</code></pre>\n\n<p><strong>channelName</strong> should be an existing channel.</p>\n\n<p><strong>appName</strong> <em>optional</em> should contain the name of the app you&#39;re dealing with. If it is not supplied the default application will be used.</p>\n\n<p><strong>token</strong> is the identifier token provided by APN or GCM.</p>\n\n<p>Like subscribe, the successful response will contain the device as well as any channels it&#39;s subscribed to. The unsubscribed channel will no longer be in the channels list.</p>\n\n<h3>Unsubscribe in custom code</h3>\n\n<p>You can also execute the unsubscribe method directly in your custom code. For example:</p>\n\n<pre><code>/*\n * The parameters for unsubscribe in order are:\n * token : Identifier provided by APN or GCM.\n * channelName : name of the channel to unsubscribe from.\n * appId : Id of the application the channel belongs to.\n */\nthis.push.unsubscribe(&#39;abc123&#39;, &#39;channelName&#39;, &#39;appId&#39;, function(err, result) {\n  // &quot;result&quot; will be the device and it&#39;s associated channels.\n});\n</code></pre>\n\n<h2>Device&#39;s Channels</h2>\n\n<p><strong>Does NOT require authentication</strong></p>\n\n<h4>GET /api/push_notifications/device/:token/channels</h4>\n\n<h4>RESPONSE</h4>\n\n<pre><code>[       \n  {       \n    &quot;app&quot;: {\n      &quot;name&quot;: &quot;PusheNotifications&quot;,\n      &quot;id&quot;: &quot;569938c1df324340867cfa29&quot;\n    },\n    &quot;name&quot;: &quot;Alerts&quot;,      \n    &quot;compositeName&quot;: &quot;Alerts56bbc0111dbcbc3d89bcfa76&quot;,       \n    &quot;id&quot;: &quot;56bbc0221dbcbc3d89bcfa77&quot;     \n  },     \n  {     \n    &quot;app&quot;: {\n      &quot;name&quot;: &quot;PusheNotifications&quot;,\n      &quot;id&quot;: &quot;569938c1df324340867cfa29&quot;\n    },\n    &quot;name&quot;: &quot;Messages&quot;,       \n    &quot;compositeName&quot;: &quot;Messages56bbc0111dbcbc3d89bcfa76&quot;,     \n    &quot;id&quot;: &quot;56bcb8f3c1834efb189473e1&quot;\n  } \n]\n</code></pre>\n\n<p><strong>token</strong> This is the token supplied by either GCM or APN.</p>\n\n<h2>Push Notification</h2>\n\n<p><strong>Does NOT require authentication</strong></p>\n\n<p>Sends a message to the supplied channel&#39;s devices. Includes both Google and Apple devices.</p>\n\n<h4>POST /api/push_notifications/message</h4>\n\n<pre><code>{\n  channelName: &quot;myChannel&quot;,\n  appName: &quot;someApp&quot;,\n  appleAlert: &quot;\\uD83D\\uDCE7 Updates Available!&quot;,\n  appleBadge:  1,\n  appleSound: &quot;ping.aiff&quot;,\n  appleExpiry: 60,\n  appleContentAvailable:  0,\n  googleCollapseKey: &quot;Updates Available&quot;,\n  googleDelayWhileIdle: true,\n  googleTimeToLive: 60\n  payload: &quot;You&#39;ve received a new message!&quot;\n}\n</code></pre>\n\n<p><strong>channelName</strong>  should be an existing channel.</p>\n\n<p><strong>appName</strong> <em>optional</em> should contain the name of the app the channel belongs to. If it is not supplied the default application will be used.</p>\n\n<p><strong>appleAlert</strong> The text to display in the alert. Apple only. Defaults to &quot;You have a new notification!&quot;.</p>\n\n<p><strong>appleBadge</strong> <em>optional</em> Number to display on the app&#39;s badge icon. Apple only. Defaults to 1.</p>\n\n<p><strong>appleSound</strong> <em>optional</em> The sound file to play on the device when receiving the notification. The file should exist within your application&#39;s bundle or in the Library/Sounds folder. Apple only. Defaults to &quot;ping.aiff&quot;.</p>\n\n<p><strong>appleExpiry</strong> Minutes. Time when the push notification is no longer relevant and can be discarded regardless if it has been delivered. Apple only. Defaults to 60.</p>\n\n<p><strong>appleContentAvailable</strong> <em>optional</em> 1 indicates that the application has content available. Apple only. Defaults to 0 - no content available.</p>\n\n<p><strong>googleCollapseKey</strong> <em>optional</em> Identifies a group of messages that can be collapsed to display only the most recent notification. Google only.</p>\n\n<p><strong>googleDelayWhileIdle</strong> <em>optional</em> Indicates whether the message should be delayed until the device is active. Google only. Default is false.</p>\n\n<p><strong>googleTimeToLive</strong> <em>optional</em> This parameter specifies how long (in minutes) the message should be kept in GCM storage if the device is offline. Google only. Default is 4 weeks.</p>\n\n<p><strong>payload</strong> <em>required</em> Content of the alert.</p>\n\n<h3>Push Notification in custom code</h3>\n\n<p>You can also use the push API to send a message object to an application&#39;s channel in your custom code. To do so, first create a new message object:</p>\n\n<pre><code>Message.create({channel: &#39;channel_id&#39;, payload: &#39;the message&#39;}).exec(function(err, result) {\n  // Handle any validation errors that may occur\n  // result is your persisted message.\n})\n</code></pre>\n\n<p>Once you have your message object you can use it to send message to a channel using the push API:</p>\n\n<pre><code>// &#39;result&#39; is the result of the create callback from above - the message object.\n// Replace channelName with the appropriate channel name and appId with a push application&#39;s id.\nthis.push.sendMessage(result, &#39;channelName&#39;, &#39;appId&#39;, function() {\n  // the callback is executed when messages are sending.\n})\n</code></pre>\n\n<h2><a name="file-uploads"></a> File Uploads</h2>\n\n<h2><a name=“file-uploads”></a> File Uploads</h2>\n\n<p>Models may contain file fields. Generated APIs provides a set of operations to enable CRUD file operations.</p>\n\n<h2>Creating a resource that contains a file field</h2>\n\n<p>Suppose we have a Candidate model with three fields:</p>\n\n<ul>\n<li>name</li>\n<li>lastName</li>\n<li>resume</li>\n</ul>\n\n<p>Name and lastName are Strings, and resume is expected to be an attached file (In example: a PDF or DOC). We could execute following command to create a model instance:</p>\n\n<h4>POST http://localhost:1337/api/v1/employees</h4>\n\n<pre><code>{\n&quot;lastname&quot;: &quot;John&quot;,\n&quot;name&quot;: &quot;Dow&quot;,\n&quot;resume&quot;: &quot;@file.png&quot;\n}\n</code></pre>\n\n<h4>RESPONSE</h4>\n\n<pre><code>{\n&quot;lastname&quot;: &quot;BBBB&quot;,\n&quot;name&quot;: &quot; POPO&quot;,\n&quot;resume&quot;: &quot;/api/employees/files/26f273e8-a44d-499b-b5fa-1bc6cef7ef3c.png&quot;,\n&quot;id&quot;: &quot;56cfe170f67da8143f9023fe&quot;\n}\n</code></pre>\n\n<p>!Important: POST request MUST BE of type multipart/form-data</p>\n\n<p>File fields wont return the file contents embedded in the model representation but an outbound link to resource. The last part of the URI is the file name.</p>\n\n<h2>Updating / Patching a resource that contains a file field</h2>\n\n<p>A resource with files can be patched / updated through the API.</p>\n\n<h4>PUT http://localhost:1337/api/v1/employees/56cfe170f67da8143f9023fe</h4>\n\n<pre><code>{\n&quot;lastname&quot;: &quot;Doe&quot;,\n&quot;name&quot;: &quot; John&quot;\n}\n</code></pre>\n\n<h4>RESPONSE 204</h4>\n\n<p>So in this case, resource with id 56cfe170f67da8143f9023fe will be updated with provided values.</p>\n\n<h2>Updating / Patching just model files</h2>\n\n<p>Suppose we have an existing employee like this:</p>\n\n<pre><code>{\n&quot;lastname&quot;: &quot;Doe&quot;,\n&quot;name&quot;: &quot; John&quot;,\n&quot;resume&quot;: &quot;/api/employees/files/babce698-6069-4ed7-a821-09489fefe213.png&quot;,\n&quot;id&quot;: &quot;56d8f4e8d4bbbf7d3f9e0224&quot;\n}\n</code></pre>\n\n<p>If you&#39;d like to remove the resume from a candidate simply send an empty string in the request for that field:</p>\n\n<h4>PUT http://localhost:1337/api/v1/employees/56cfe170f67da8143f9023fe</h4>\n\n<pre><code>{\n&quot;lastname&quot;: &quot;Doe&quot;,\n&quot;name&quot;: &quot; John&quot;,\n&quot;resume&quot;: &quot;&quot;,\n}\n</code></pre>\n\n<p>Executing request above, resume file will be removed from storage, and model will be updated setting resume file url field to null. So a get request over that model instance will return:</p>\n\n<h4>RESPONSE</h4>\n\n<p>{\n&quot;lastname&quot;: &quot;Doe&quot;,\n&quot;name&quot;: &quot; John&quot;,\n&quot;resume&quot;: null,\n&quot;id&quot;: &quot;56d8f4e8d4bbbf7d3f9e0224&quot;\n}</p>\n\n<p>The API will automatically delete files associated with a model when it is destroyed.</p>\n\n<pre><code>#### DELETE http://localhost:1337/api/v1/employees/56cfe170f67da8143f9023fe\n</code></pre>\n\n<h4>RESPONSE 204</h4>\n\n<p>## <a name="programmatic-crud-and-query-scope-calls"></a> Programmatic CRUD and Query Scope Calls</p>\n\n<h3>Create</h3>\n\n<p>If you want to create a NotificationLog in your custom code:</p>\n\n<pre><code class="javascript">// Pass the create method an object containing the model attributes\nV1NotificationLog.create(&lt;values&gt;)\n  .then(function(result) {\n    // result is the object created.\n  })\n  .catch(function(err) {\n    // Handle any error that may occur\n  });\n</code></pre>\n\n<h3>Read</h3>\n\n<p>If you want to find a NotificationLog in your custom code:</p>\n\n<pre><code class="javascript">V1NotificationLog.findOne({id: &lt;id&gt;})\n  .then(function(result) {\n    // result is the object found.\n  })\n  .catch(function(err) {\n    // Handle any error that may occur\n  });\n</code></pre>\n\n<h3>Update</h3>\n\n<p>If you want to update a NotificationLog in your custom code:</p>\n\n<pre><code class="javascript">// params is the &quot;where&quot; portion of the update\nvar params = {id: 1};\nV1NotificationLog.update(params, &lt;values&gt;)\n  .then(function(result) {\n    // result is the updated object.\n  })\n  .catch(function(err) {\n    // Handle any error that may occur\n  })\n</code></pre>\n\n<h3>Destroy</h3>\n\n<p>If you want to destroy a NotificationLog in your custom code:</p>\n\n<pre><code class="javascript">V1NotificationLog.destroy(id)\n  .then(function() {\n    // success\n  })\n  .catch(function(err) {\n    // Handle any error that may occur\n  })\n```### Create\n\nIf you want to create a Order in your custom code:\n\n```javascript\n// Pass the create method an object containing the model attributes\nV1Order.create(&lt;values&gt;)\n  .then(function(result) {\n    // result is the object created.\n  })\n  .catch(function(err) {\n    // Handle any error that may occur\n  });\n</code></pre>\n\n<h3>Read</h3>\n\n<p>If you want to find a Order in your custom code:</p>\n\n<pre><code class="javascript">V1Order.findOne({id: &lt;id&gt;})\n  .then(function(result) {\n    // result is the object found.\n  })\n  .catch(function(err) {\n    // Handle any error that may occur\n  });\n</code></pre>\n\n<h3>Update</h3>\n\n<p>If you want to update a Order in your custom code:</p>\n\n<pre><code class="javascript">// params is the &quot;where&quot; portion of the update\nvar params = {id: 1};\nV1Order.update(params, &lt;values&gt;)\n  .then(function(result) {\n    // result is the updated object.\n  })\n  .catch(function(err) {\n    // Handle any error that may occur\n  })\n</code></pre>\n\n<h3>Destroy</h3>\n\n<p>If you want to destroy a Order in your custom code:</p>\n\n<pre><code class="javascript">V1Order.destroy(id)\n  .then(function() {\n    // success\n  })\n  .catch(function(err) {\n    // Handle any error that may occur\n  })\n```### Create\n\nIf you want to create a SendGrid in your custom code:\n\n```javascript\n/* First parameter is the name of the action you&#39;d like to execute.\n * params are additional URL parameters that you&#39;d like to send with the outgoing request.\n * values should be an object containing the fields for the new object.\n * context is the request context used for interpolating values within the call, this is\n *  always req.context\n * The last parameter is an error first callback function.\n */\nV1SendGrid.request(&#39;create&#39;, params, values, req.context, function(err, result) {\n  if (err) {\n    // Handle error\n  } else {\n    // result is the created object\n  }\n});\n</code></pre>\n\n<h3>Read</h3>\n\n<p>If you want to find a SendGrid in your custom code:</p>\n\n<pre><code class="javascript">/* First parameter is the name of the action you&#39;d like to execute.\n * params are additional URL parameters that you&#39;d like to send with the outgoing request.\n * values should be an object containing the fields for the new object - not used in read calls.\n * context is the request context used for interpolating values within the call, this is\n *  always req.context\n * The last param is an error first callback function.\n */\nvar params = { limit: 10 };\nV1SendGrid.request(&#39;read&#39;, params, values, req.context, function(err, result) {\n  if (err) {\n    // Handle error\n  } else {\n    // result is the found object\n  }\n});\n</code></pre>\n\n<h3>Update</h3>\n\n<p>If you want to update a SendGrid in your custom code:</p>\n\n<pre><code class="javascript">/* First parameter is the name of the action you&#39;d like to execute.\n * params are additional URL parameters that you&#39;d like to send with the outgoing request.\n * values should be an object containing the fields to be updated.\n * context is the request context used for interpolating values within the call, this is\n *  always req.context\n * The last param is an error first callback function.\n */\nV1SendGrid.request(&#39;update&#39;, params, values, req.context, function(err, result) {\n  if (err) {\n    // Handle error\n  } else {\n    // result is the updated object\n  }\n});\n</code></pre>\n\n<h3>Destroy</h3>\n\n<p>If you want to destroy a SendGrid in your custom code:</p>\n\n<pre><code class="javascript">/* First parameter is the name of the action you&#39;d like to execute.\n * params are additional URL parameters that you&#39;d like to send with the outgoing request.\n * values should be an object containing the fields for the new object - not used in delete calls.\n * context is the request context used for interpolating values within the call, this is\n *  always req.context\n * The last param is an error first callback function.\n */\nV1SendGrid.request(&#39;delete&#39;, params, values, req.context, function(err) {\n  if (err) {\n    // Handle error\n  }\n});\n```### Create\n\nIf you want to create a Twilio in your custom code:\n\n```javascript\n/* First parameter is the name of the action you&#39;d like to execute.\n * params are additional URL parameters that you&#39;d like to send with the outgoing request.\n * values should be an object containing the fields for the new object.\n * context is the request context used for interpolating values within the call, this is\n *  always req.context\n * The last parameter is an error first callback function.\n */\nV1Twilio.request(&#39;create&#39;, params, values, req.context, function(err, result) {\n  if (err) {\n    // Handle error\n  } else {\n    // result is the created object\n  }\n});\n</code></pre>\n\n<h3>Read</h3>\n\n<p>If you want to find a Twilio in your custom code:</p>\n\n<pre><code class="javascript">/* First parameter is the name of the action you&#39;d like to execute.\n * params are additional URL parameters that you&#39;d like to send with the outgoing request.\n * values should be an object containing the fields for the new object - not used in read calls.\n * context is the request context used for interpolating values within the call, this is\n *  always req.context\n * The last param is an error first callback function.\n */\nvar params = { limit: 10 };\nV1Twilio.request(&#39;read&#39;, params, values, req.context, function(err, result) {\n  if (err) {\n    // Handle error\n  } else {\n    // result is the found object\n  }\n});\n</code></pre>\n\n<h3>Update</h3>\n\n<p>If you want to update a Twilio in your custom code:</p>\n\n<pre><code class="javascript">/* First parameter is the name of the action you&#39;d like to execute.\n * params are additional URL parameters that you&#39;d like to send with the outgoing request.\n * values should be an object containing the fields to be updated.\n * context is the request context used for interpolating values within the call, this is\n *  always req.context\n * The last param is an error first callback function.\n */\nV1Twilio.request(&#39;update&#39;, params, values, req.context, function(err, result) {\n  if (err) {\n    // Handle error\n  } else {\n    // result is the updated object\n  }\n});\n</code></pre>\n\n<h3>Destroy</h3>\n\n<p>If you want to destroy a Twilio in your custom code:</p>\n\n<pre><code class="javascript">/* First parameter is the name of the action you&#39;d like to execute.\n * params are additional URL parameters that you&#39;d like to send with the outgoing request.\n * values should be an object containing the fields for the new object - not used in delete calls.\n * context is the request context used for interpolating values within the call, this is\n *  always req.context\n * The last param is an error first callback function.\n */\nV1Twilio.request(&#39;delete&#39;, params, values, req.context, function(err) {\n  if (err) {\n    // Handle error\n  }\n});\n```### Create\n\nIf you want to create a User in your custom code:\n\n```javascript\n// Pass the create method an object containing the model attributes\nV1User.create(&lt;values&gt;)\n  .then(function(result) {\n    // result is the object created.\n  })\n  .catch(function(err) {\n    // Handle any error that may occur\n  });\n</code></pre>\n\n<h3>Read</h3>\n\n<p>If you want to find a User in your custom code:</p>\n\n<pre><code class="javascript">V1User.findOne({id: &lt;id&gt;})\n  .then(function(result) {\n    // result is the object found.\n  })\n  .catch(function(err) {\n    // Handle any error that may occur\n  });\n</code></pre>\n\n<h3>Update</h3>\n\n<p>If you want to update a User in your custom code:</p>\n\n<pre><code class="javascript">// params is the &quot;where&quot; portion of the update\nvar params = {id: 1};\nV1User.update(params, &lt;values&gt;)\n  .then(function(result) {\n    // result is the updated object.\n  })\n  .catch(function(err) {\n    // Handle any error that may occur\n  })\n</code></pre>\n\n<h3>Destroy</h3>\n\n<p>If you want to destroy a User in your custom code:</p>\n\n<pre><code class="javascript">V1User.destroy(id)\n  .then(function() {\n    // success\n  })\n  .catch(function(err) {\n    // Handle any error that may occur\n  })\n</code></pre>\n\n<h2><a name="roles"></a> Roles</h2>\n\n<ul>\n<li>unauthenticated<br></li>\n<li>authenticated<em>without</em>role<br></li>\n</ul>\n\n<h2><a name="api-versions"></a>API Versions</h2>\n\n<ul>\n<li>Version 1 at /api/v1 OR /api<br></li>\n</ul>\n\n<h2><a name="storage-interfaces"></a> Storage Interfaces</h2>\n\n<ul>\n<li>AnyPresence Storage (Local)<br></li>\n<li>TwilioAPI (Http)<br></li>\n<li>SendGridAPI (Http)<br></li>\n</ul>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/documentation/documentation.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<iframe style="position: absolute; height: 100%; border: none; width: 100%; left: 0" src="/swagger/index.html"></iframe>';

}
return __p
};

this["JST"]["assets/templates/views/partials/fileInputDirective.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="form-group string {{optionalValue}}" ng-class="errors.length > 0 ? \'has-error\' : \'\'">\n  <div class="col-md-3">\n    <label class="string {{optionalValue}} control-label" for="{{name}}">\n      <abbr class="required" title="required" ng-if="required">*</abbr>\n      {{label}}\n    </label>\n  </div>\n  <div class="col-md-9">\n    <button class=\'btn btn-danger\' ng-click=\'removeFile()\' ng-if=\'property\'>Remove</button>\n    <input type=\'file\' ng-files="appendFile($files)" ng-if=\'!property\' />\n    <small class="help-inline text-danger" ng-repeat="error in errors">{{formatError(error)}}<br/></small>\n  </div>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/formInputDirective.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="form-group string {{optionalValue}}" ng-class="errors.length > 0 ? \'has-error\' : \'\'">\n  <div class="col-md-3">\n    <label class="string {{optionalValue}} control-label" for="{{name}}">\n      <abbr class="required" title="required" ng-if="required">*</abbr>\n      {{label}}\n    </label>\n  </div>\n  <div class="col-md-9">\n    <input class="string {{optionalValue}} form-control" id="{{name}}" size="50" type="{{type}}" ng-model="property" />\n    <small class="help-inline text-danger" ng-repeat="error in errors">{{formatError(error)}}<br/></small>\n  </div>\n</div>';

}
return __p
};

this["JST"]["assets/templates/views/partials/mainIndex.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row" ng-controller="MainIndexController">\n  <div class="col-md-5">\n    <div class="panel panel-default" heading="Base API" type="default">\n      <div class="panel-heading">\n        <h3 class="panel-title">Base API</h3>\n      </div>\n      <div class="panel-body">\n        Current API: <code>/api/v1</code>\n      </div>\n      <div class="panel-body">\n        Latest API: <code>/api</code>\n      </div>\n    </div>\n  </div>\n  <div class="col-md-7">\n    <table class="table table-striped table-hover" condensed="false" hover="true" striped="true">\n      <thead>\n      <tr>\n        <th>Object</th>\n        <th class="text-right">Count</th>\n      </tr>\n      </thead>\n      <tbody>\n      \n          \n          <tr>\n            <td>\n              <i class="fa fa-th"></i>\n              <a href="#/notification_logs">Notification Logs</a>\n            </td>\n            <td class="text-right">\n              \n                  <div class="text-muted" ng-if="objectCounts != null && objectCounts.notificationLog != null">{{ objectCounts.notificationLog }}</div>\n                  <div class="text-muted" ng-if="objectCounts == null || objectCounts.notificationLog == null">n/a</div>\n              \n            </td>\n          </tr>\n      \n          \n          <tr>\n            <td>\n              <i class="fa fa-th"></i>\n              <a href="#/orders">Orders</a>\n            </td>\n            <td class="text-right">\n              \n                  <div class="text-muted" ng-if="objectCounts != null && objectCounts.order != null">{{ objectCounts.order }}</div>\n                  <div class="text-muted" ng-if="objectCounts == null || objectCounts.order == null">n/a</div>\n              \n            </td>\n          </tr>\n      \n          \n          \n          \n          <tr>\n            <td>\n              <i class="fa fa-th"></i>\n              <a href="#/users">Users</a>\n            </td>\n            <td class="text-right">\n              \n                  <div class="text-muted" ng-if="objectCounts != null && objectCounts.user != null">{{ objectCounts.user }}</div>\n                  <div class="text-muted" ng-if="objectCounts == null || objectCounts.user == null">n/a</div>\n              \n            </td>\n          </tr>\n      \n      </tbody>\n    </table>\n  </div>\n</div>';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/app/create_app.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/messaging">Messaging</a></li>\n  <li class="active">Add new App</li>\n</ul>\n\n<style>\n  .thumb {\n    width: 24px;\n    height: 24px;\n    float: none;\n    position: relative;\n    top: 7px;\n  }\n\n  form .progress {\n    line-height: 15px;\n  }\n\n  .progress {\n    display: inline-block;\n    width: 100px;\n    border: 3px groove #CCC;\n  }\n\n  .progress div {\n    font-size: smaller;\n    background: orange;\n    width: 0;\n  }\n</style>\n\n<div class="page-header">\n  <h1>Create App</h1>\n</div>\n\n<!-- <form-input name="name" label="App name" required="true" property="instance.name" type="text" errors="errors.name"></form-input>\n<button ngf-select="uploadFiles($files, $invalidFiles)" multiple accept="image/*" ngf-max-height="1000" ngf-max-size="1MB">Upload CERT and PEM files (or combined file)</button>\n\nUploaded Certificates:\n<ul>\n  <li ng-repeat="f in files" style="font:smaller">{{f.name}} {{f.$errorParam}}\n      <span class="progress" ng-show="f.progress >= 0">\n        <div style="width:{{f.progress}}%"\n             ng-bind="f.progress + \'%\'"></div>\n      </span>\n  </li>\n  <li ng-repeat="f in errFiles" style="font:smaller">{{f.name}} {{f.$error}} {{f.$errorParam}}\n  </li>\n</ul>\n</body>\n\n<div class="form-actions">\n  <input class="btn btn-primary" name="commit" type="submit" value="Submit" ng-click="submit(instance)" ng-disabled="loading" />\n  <a href="#/messaging" class="btn"> Return</a>\n</div> -->\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/messaging/app/form_app.html\'"></form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/app/edit_app.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/messaging">Apps</a></li>\n  <li class=\'active\'>{{instance.name}}</li>\n</ul>\n\n<div class="page-header">\n  <h1>Edit App</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/messaging/app/form_app.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/app/form_app.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage"> Please review the problems below</span><span ng-if="errorMessage"> {{errorMessage}}</span>\n</div>\n\n<form-input name="name" label="Name" required="true" property="instance.name" type="text" errors="errors.name"></form-input>\n<form-input name="gcmkey" label="GCM API Key" required="false" property="instance.gcmkey" type="text" errors="errors.gcmkey"></form-input>\n<form-input name="isdefault" label="Default" required="false" property="instance.isDefault" type="checkbox" errors="errors.isDefault"></form-input>\n<form-input name="adminPushOnly" label="Admin Only Push" required="false" property="instance.adminPushOnly" type="checkbox" errors="errors.adminPushOnly"></form-input>\n\n<div class=\'input-group cert-toggle\'>\n  <span class="input-group-addon">Apple Certs</span>\n  <div class=\'btn-group cert-buttons\' data-toggle=\'buttons\'>\n    <button class=\'btn active btn-cert\' ng-class=\'{"btn-success": showCerts, "btn-default": !showCerts}\' ng-click=\'toggleShowCerts(true)\'>\n      <input type=\'radio\' name=\'ssl-options\' id=\'cert-option\' autocomplete=\'off\' checked>\n      Cert / Key\n    </button>\n    <button class=\'btn btn-default\' ng-class=\'{"btn-success": !showCerts, "btn-default": showCerts}\' ng-click=\'toggleShowCerts(false)\'>\n      <input type=\'radio\' name=\'ssl-options\' id=\'pfx-option\' autocomplete=\'off\'>\n      P12 File\n    </button>\n  </div>\n</div>\n\n<form-input name="passphrase" label="Passphrase" required="false" property="instance.passphrase" type="text" errors="errors.passphrase"></form-input>\n<div class=\'form-group\'>\n  <div class=\'col-md-3\'>\n    <label class="string control-label">\n      Environment\n    </label>\n  </div>\n  <div class=\'col-md-9\'>\n    <select class=\'form-control\' ng-model=\'instance.production\' ng-options=\'o.v as o.n for o in [{ n: "Development", v: false },{ n: "Production", v: true}]\'></select>\n  </div>\n</div>\n\n<div id=\'cert-key-fields\' class=\'file-uploads\' ng-if=\'showCerts\'>\n  <file-input name=\'cert\' label=\'Cert\' required=\'false\' errors=\'errors.cert\' property=\'instance.cert\' transform=\'formatFile\'></file-input>\n  <file-input name=\'privateKey\' label=\'Private Key\' required=\'false\' errors=\'errors.privateKey\' property=\'instance.privateKey\'></file-input>\n</div>\n\n<div id=\'pfx-fields\' class=\'file-uploads\' ng-if=\'!showCerts\'>\n  <file-input name=\'pfx\' label=\'P12 File\' required=\'false\' errors=\'errors.pfx\' property=\'instance.pfx\'></file-input>\n</div>\n\n<div class="form-actions">\n  <input class="btn btn-primary" name="commit" type="submit" value="Submit" ng-click="submit(instance)" ng-disabled="loading" />\n  <a href="#/messaging" class="btn"> Return</a>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/app/index_app.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="container-fluid container-messaging">\n\n  <div class="row">\n    <ul class="breadcrumb">\n      <li><a href="#/index">Home</a></li>\n      <li><a href="#/messaging">Apps</a></li>\n      <li class="active">{{currentApp.name}}</li>\n    </ul>\n  </div>\n  <!--Messages-->\n  <div class="list-group-item clearfix list-group-collapse send-message">\n    <div ng-controller="MessageCreateController">\n\n      <div class="alert alert-danger" ng-if="error">\n        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n        <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span><span ng-if="!errorMessage"> Please review the problems below</span><span ng-if="errorMessage"> {{errorMessage}}</span>\n      </div>\n\n      <div class=\'alert alert-success\' ng-if=\'success\'>\n        <span class=\'glyphicon glyphicon-ok\'></span> Sent!\n      </div>\n\n      <div class="input-group send-message-header">\n      <span class="input-group-addon" id="new-message">\n        <span class="glyphicon glyphicon-envelope"></span>\n      </span>\n        <input name=\'payload\' ng-class="{ \'has-error\': errors[\'payload\']}" type="text" class="form-control" placeholder="Write message" ng-model="message.payload"/>\n        <select name=\'channelName\' ng-class="{ \'has-error\': errors[\'channel\']}" class=\'form-control select select-message\' name="resourceTemp" ng-model="message.channelName">\n          <option ng-repeat=\'channel in channels track by $index\' value="{{channel.name}}">{{channel.name}}</option>\n        </select>\n        <div class="input-group-btn">\n          <a class="btn btn-default" role="button" data-toggle="collapse" data-target="#collapseMessageDetails"><span class="glyphicon glyphicon-list"></span>\n          </a>\n          <button type="button" class="btn btn-success" ng-click="send()"><span\n          class="glyphicon glyphicon-send"></span>\n          </button>\n        </div>\n      </div>\n      <div id="collapseMessageDetails" class="sublinks collapse">\n        <div class="list-group-item small">\n          <table class="table message-details">\n            <thead>\n            <tr>\n              <th>Apple Configuration</th>\n              <th>Android Configuration</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n              <td>\n                <div class="input-group"><span class="input-group-addon" id="new-message">Badge</span>\n                  <input type="text" class="form-control" placeholder="Displayed on app icon" ng-model="message.appleBadge"/>\n                </div>\n              </td>\n              <td>\n                <div class="input-group"><span class="input-group-addon" id="new-message">Collapse Key</span>\n                  <input type="text" class="form-control" ng-model="message.googleCollapseKey"/>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <div class="input-group"><span class="input-group-addon" id="new-message">Alert</span>\n                  <input type="text" class="form-control" placeholder="Text to display in the alert" ng-model="message.appleAlert"/>\n                </div>\n              </td>\n              <td>\n                <div class="input-group"><span class="input-group-addon" id="new-message">Delay While Idle</span>\n                  <select class=\'form-control select-delay-while-idle\' ng-model=\'message.googleDelayWhileIdle\'>\n                    <option value="true">Yes</option>\n                    <option value="false">No</option>\n                  </select>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <div class="input-group"><span class="input-group-addon" id="new-message">Sound</span>\n                  <input type="text" class="form-control" placeholder="ping.aiff" ng-model="message.appleSound"/>\n                </div>\n              </td>\n              <td>\n                <div class="input-group"><span class="input-group-addon" id="new-message">Time To Live</span>\n                  <input type="text" class="form-control" placeholder="Minutes until push expires" ng-model="message.googleTimeToLive"/>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <div class="input-group"><span class="input-group-addon" id="new-message">Expiry</span>\n                  <input type="number" class="form-control" placeholder="Minutes until push expires" ng-model="message.appleExpiry"/>\n                </div>\n              </td>\n              <td>&nbsp;</td>\n            </tr>\n            <tr>\n              <td>\n                <div class="input-group"><span class="input-group-addon" id="new-message">Content-Available</span>\n                  <select class=\'form-control select-delay-while-idle\' ng-model=\'message.appleContentAvailable\'>\n                    <option value="1">Yes</option>\n                    <option value="0">No</option>\n                  </select>\n\n                  <!-- <input type="text" class="form-control" placeholder="1 indicates data is available" ng-model="message.appleContentAvailable"/> -->\n                </div>\n              </td>\n              <td>&nbsp;</td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!--Messages-->\n  <div ng-controller="ChannelListController">\n\n    <div class="panel panel-default panel-messaging" >\n      <div class="panel-heading clearfix">\n        <table class="table-full ">\n          <tbody>\n          <tr>\n            <td class="title-badge">Channels <span class=\'label label-primary\'>{{channelPagination.count}}</span></td>\n            <td class="new-application">\n              <a class="btn btn-primary" href="#/messaging/{{app_id}}/channel/new"><i class="fa fa-plus"></i> New</a>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\'panel-body\'>\n        <table class="table table-full" ng-if="instances.length > 0">\n          <thead>\n          <tr>\n            <th>Name</th>\n            <th>Devices</th>\n            <th>Messages</th>\n            <th></th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr ng-repeat="channel in instances track by $index">\n            <td>{{channel.name}}</td>\n            <td>{{channel.devices.length}}</td>\n            <td>{{channel.messages.length}}</td>\n            <td class=\'actions table-actions-3\'>\n              <div class=\'btn-group pull-right\'>\n                <a type=\'button\' class=\'btn btn-default\' href="#/messaging/{{currentApp.id}}/channel/{{channel.id}}/edit"><span class="glyphicon glyphicon-pencil"></span></a></a>\n                <a type=\'button\' class=\'btn btn-default\' href="#/messaging/{{currentApp.id}}/channel/{{channel.id}}"><span class=\'glyphicon glyphicon-eye-open\'></span></a>\n                <a type=\'button\' class=\'btn btn-danger\' ng-click=\'destroy(channel.id)\'><span class="glyphicon glyphicon-trash"></span></a>\n              </div>\n            </td>\n          </tr>\n          </tbody>\n          <tfoot>\n          <tr>\n            <td colspan="4">\n              <paginator ng-if=\'instances.length > 0\'></paginator>\n            </td>\n          </tr>\n          </tfoot>\n        </table>\n        <div class=\'alert alert-info\'ng-if="instances.length === 0">\n          No Channels\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div ng-controller="DeviceListController">\n    <div class="panel panel-default panel-messaging" >\n      <div class="panel-heading clearfix">\n        <table class="table-full ">\n          <tbody>\n          <tr>\n            <td class="title-badge">Devices <span class=\'label label-primary\'>{{devicePagination.count}}</span></td>\n            <td class="new-application">\n              <a class="btn btn-primary" href="#/messaging/{{app_id}}/device/new"><i class="fa fa-plus"></i> New</a>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div class=\'panel-body\'>\n        <table class="table table-full" ng-if="instances.length > 0">\n          <thead>\n            <tr>\n              <th>Identifier</th>\n              <th>Provider</th>\n              <th>Name</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-repeat="device in instances track by $index">\n              <td>{{device.identifier}}</td>\n              <td>{{device.provider}}</td>\n              <td>{{device.name}}</td>\n              <td class="actions table-actions-3">\n                <div class=\'btn-group pull-right\'>\n                  <a type=\'button\' class=\'btn btn-default\' href="#/messaging/{{app_id}}/device/{{device.id}}/edit"><span class="glyphicon glyphicon-pencil"></span></a>\n                  <a type=\'button\' class=\'btn btn-default\' href="#/messaging/{{app_id}}/device/{{device.id}}"><span class=\'glyphicon glyphicon-eye-open\'></span></a>\n                  <a type=\'button\' class=\'btn btn-danger\' ng-click=\'destroy(device.id)\'><span class="glyphicon glyphicon-trash"></span></a>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colspan="4">\n                <paginator ng-if=\'instances.length > 0\'></paginator>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n\n        <div class=\'alert alert-info\'ng-if="instances.length === 0">\n          No Devices\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n\n  <div ng-controller=\'MessageListController\'>\n    <div class="panel panel-default panel-messaging" >\n      <div class="panel-heading clearfix">\n        <table class="table-full ">\n          <tbody>\n          <tr>\n            <td class="title-badge">Messages <span class=\'label label-primary\'>{{messagePagination.count}}</span></td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div class=\'panel-body\'>\n        <table class="table table-full" ng-if="instances.length > 0">\n          <thead>\n            <tr>\n              <th>Channel</th>\n              <th>Date</th>\n              <th>Payload</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-repeat="message in instances">\n              <td>{{message.channel.name}}</td>\n              <td>{{formatDate(message.createdAt)}}</td>\n              <td style=\'width: 60%;\'>{{message.payload}}</td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colspan="3">\n                <paginator ng-if=\'instances.length > 0\'></paginator>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n\n        <div class=\'alert alert-info\'ng-if="instances.length === 0">\n          No Messages\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/app/show_app.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/messaging">Messaging</a></li>\n  <li class="active">App</li>\n</ul>\n\n<div class="page-header">\n  <h1>App {{instance.name}}</h1>\n  <a class="btn btn-primary" ng-href="#/messaging/app/{{instance.id}}/edit">\n    <i class="fa fa-pencil"></i>\n    Edit\n  </a>\n</div>\n\n<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage">An unexpected error was encountered</span><span ng-if="errorMessage">{{errorMessage}}</span>\n</div>\n\n<table class="table table-striped table-hover" condensed="false" hover="true" striped="true">\n  <tbody>\n  <tr>\n    <td>Id</td>\n    <td>{{instance.id}}</td>\n  </tr>\n  <tr>\n    <td>Name</td>\n    <td>{{instance.name}}</td>\n  </tr>\n  <tr>\n    <td>gcmkey</td>\n    <td>{{instance.gcmkey}}</td>\n  </tr>\n  </tbody>\n</table>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/channel/create_channel.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/messaging">Apps</a></li>\n  <li><a href=\'#/messaging/{{currentApp.id}}/index\'>{{currentApp.name}}</a></li>\n  <li class=\'active\'>Channels</li>\n</ul>\n\n<div class="page-header">\n  <h1>Create Channel</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/messaging/channel/form_channel.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/channel/edit_channel.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/messaging">Apps</a></li>\n  <li><a href=\'#/messaging/{{currentApp.id}}/index\'>{{currentApp.name}}</a></li>\n  <li class=\'active\'>Channels</li>\n  <li class=\'active\'>{{instance.name || instance.id}}</li>\n</ul>\n\n<div class="page-header">\n  <h1>Edit Channel</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/messaging/channel/form_channel.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/channel/form_channel.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage"> Please review the problems below</span><span ng-if="errorMessage"> {{errorMessage}}</span>\n</div>\n\n<form-input name="name" label="name" required="true" property="instance.name" type="text" errors="errors.name"></form-input>\n\n<div class="form-actions">\n  <input class="btn btn-primary" name="commit" type="submit" value="Submit" ng-click="submit(instance)" ng-disabled="loading" />\n  <a href=\'#/messaging/{{currentApp.id}}/index\'> Return</a>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/channel/show_channel.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/messaging">Apps</a></li>\n  <li><a href=\'#/messaging/{{currentApp.id}}/index\'>{{currentApp.name}}</a></li>\n  <li class=\'active\'>Channels</li>\n  <li class=\'active\'>{{instance.name || instance.id}}</li>\n</ul>\n\n<div class="page-header">\n  <h1>Channel {{instance.name}}</h1>\n  <a class="btn btn-primary" ng-href="#/messaging/{{currentApp.id}}/channel/{{instance.id}}/edit">\n    <i class="fa fa-pencil"></i>\n    Edit\n  </a>\n</div>\n\n<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error. </strong><span ng-if="!errorMessage">An unexpected error was encountered</span><span ng-if="errorMessage">{{errorMessage}}</span>\n</div>\n\n<table class="table table-striped table-hover" condensed="false" hover="true" striped="true">\n  <tbody>\n  <tr>\n    <td>Id</td>\n    <td>{{instance.id}}</td>\n  </tr>\n  <tr>\n    <td>Name</td>\n    <td>{{instance.name}}</td>\n  </tr>\n  </tbody>\n</table>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/device/create_device.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/messaging">Apps</a></li>\n  <li><a href=\'#/messaging/{{currentApp.id}}/index\'>{{currentApp.name}}</a></li>\n  <li class=\'active\'>Devices</li>\n</ul>\n\n<div class="page-header">\n  <h1>Create a Device</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/messaging/device/form_device.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/device/edit_device.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/messaging">Apps</a></li>\n  <li><a href=\'#/messaging/{{currentApp.id}}/index\'>{{currentApp.name}}</a></li>\n  <li class=\'active\'>Devices</li>\n  <li class=\'active\'>{{instance.name || instance.id}}</li>\n</ul>\n\n<div class="page-header">\n  <h1>Edit Device</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/messaging/device/form_device.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/device/form_device.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage"> Please review the problems below</span><span ng-if="errorMessage"> {{errorMessage}}</span>\n</div>\n\n<form-input name="identifier" label="Identifier" required="true" property="instance.identifier" type="text" errors="errors.identifier"></form-input>\n<form-input name="name" label="Name" required="false" property="instance.name" type="text" errors="errors.name"></form-input>\n<div ng-init="instance.provider">\n  <label>Apple <input name="provider" type="radio" label="Apple" ng-model="instance.provider" value="APPLE"></label>\n  <label>Google <input name="provider" type="radio" label="Google" ng-model="instance.provider" value="GOOGLE"></label>\n</div>\n\n<div class="form-actions">\n  <input class="btn btn-primary" name="commit" type="submit" value="Submit" ng-click="submit(instance)" ng-disabled="loading" />\n  <a href=\'#/messaging/{{currentApp.id}}/index\'> Return</a>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/device/show_device.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/messaging">Apps</a></li>\n  <li><a href=\'#/messaging/{{currentApp.id}}/index\'>{{currentApp.name}}</a></li>\n  <li class=\'active\'>Devices</li>\n  <li class=\'active\'>{{instance.name || instance.id}}</li>\n</ul>\n\n<div class="page-header">\n  <h1>Device</h1>\n  <a class="btn btn-primary" ng-href="#/messaging/{{currentApp.id}}/device/{{instance.id}}/edit">\n    <i class="fa fa-pencil"></i>\n    Edit\n  </a>\n</div>\n\n<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage">An unexpected error was encountered</span><span ng-if="errorMessage">{{errorMessage}}</span>\n</div>\n\n<table class="table table-striped table-hover" condensed="false" hover="true" striped="true">\n  <tbody>\n    <tr>\n      <td>Id</td>\n      <td>{{instance.id}}</td>\n    </tr>\n    <tr>\n      <td>Identifier</td>\n      <td>{{instance.identifier}}</td>\n    </tr>\n    <tr>\n      <td>Provider</td>\n      <td>{{instance.provider}}</td>\n    </tr>\n  </tbody>\n</table>\n\n<div class=\'panel panel-default panel-messaging\'>\n  <div class=\'panel-heading\'>\n    <h5 class=\'panel-title\'>Channels</h5>\n  </div>\n  <div class=\'panel-body\'>\n    <div class=\'form-inline subscribe-form\'>\n      <select class=\'form-control select\' ng-options="channel as channel.name for channel in channels track by channel.id" ng-model=\'selectedChannel\'></select>\n      <div class=\'btn-group\'>\n        <a type=\'button\' class=\'btn btn-success\' ng-click=\'subscribe()\'><i class="fa fa-plus"></i> Subscribe</a>\n      </div>\n    </div>\n    <table class=\'table table-striped table-full\' ng-if="instance.channels.length > 0">\n      <thead>\n      <tr>\n        <th>Channel Name</th>\n        <th></th>\n      </tr>\n      </thead>\n      <tr ng-repeat="channel in instance.channels">\n        <td>{{channel.name}}</td>\n        <td>\n          <div class=\'form-inline unsubscribe-form\'>\n            <div class=\'btn-group pull-right\'>\n            <a type=\'button\' class=\'btn btn-danger\' ng-click=\'unsubscribe(channel.name)\'><i class="fa fa-minus"></i> Unsubscribe</a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </table>\n    <div class=\'alert alert-info\'ng-if="instance.channels.length === 0">\n      No Channels\n    </div>\n  </div>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/index.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row">\n  <ul class="breadcrumb">\n    <li><a href="#/index">Home</a></li>\n    <li class="active">Apps</li>\n  </ul>\n</div>\n\n<div ng-controller="AppListController">\n  <div class="panel panel-default">\n    <div class="panel-heading clearfix">\n\n      <a class="btn btn-primary pull-right" href="#/messaging/new">\n        <i class="fa fa-plus"></i>\n        New\n      </a>\n\n    </div>\n    <table class="table table-striped table-full">\n      <tbody>\n      <tr ng-repeat="application in instances track by $index">\n        <td class="word-break">\n          <div class="table-row">\n            <a class="td-link table-row-links" href="#/messaging/{{application.id}}/index">{{application.name}} {{application.isDefault ? "(Default)" : ""}}</a>\n          </div>\n        </td>\n        <td class="table-actions-2">\n          <div class="btn-group">\n            <a type=\'button\' class=\'btn btn-default\' href="#/messaging/{{application.id}}/edit"><span class="glyphicon glyphicon-pencil"></span></a>\n            <a type="button" class="btn btn-default" ng-click="destroy(application.id)"><span class="glyphicon glyphicon-trash"></span></a>\n          </div>\n        </td>\n      </tbody>\n    </table>\n  </div>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/message/create_message.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/messaging">Messages</a></li>\n  <li class="active">Add new Message</li>\n</ul>\n\n<div class="page-header">\n  <h1>Post a Message</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/messaging/message/form_message.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/message/edit_message.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/messaging">Messages</a></li>\n  <li><a href="#/messaging/{{instance.id}}">Message</a></li>\n  <li class="active">Edit Message</li>\n</ul>\n\n<div class="page-header">\n  <h1>Edit Message</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/messaging/message/form_message.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/message/form_message.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage"> Please review the problems below</span><span ng-if="errorMessage"> {{errorMessage}}</span>\n</div>\n\n<div class="list-group" ng-controller="MessageCreateController">\n  <div class=\'list-group-item\'>\n    <h4>Target Channel</h4>\n    <div class=\'form-inline\'>\n      <select name="resourceTemp" class=\'form-control select\' name="resourceTemp" ng-model="data.selectedChannelId">\n        <option ng-repeat=\'channel in channels\' value=\'{{channel.id}}\'>{{channel.name}}</option>\n      </select>\n      \n    </div>\n  </div>\n\n  <div class="list-group-item">\n    <form-input name="payload" label="Payload" required="true" property="instance.payload" type="text"\n                errors="errors.payload"></form-input>\n  </div>\n\n  <div class="list-group-item">\n    <div class="list-group-item active">Apple & Google Messaging Configurations</div>\n    <form-input name="apple_badge" label="Apple Badge" required="false" property="instance.apple_badge" type="text"\n                errors="errors.apple_badge"></form-input>\n    <form-input name="apple_alert" label="Apple Alert" required="false" property="instance.apple_alert" type="text"\n                errors="errors.apple_alert"></form-input>\n    <form-input name="apple_sound" label="Apple Sound" required="false" property="instance.apple_sound" type="text"\n                errors="errors.apple_sound"></form-input>\n    <form-input name="apple_expiry" label="Apple Expiry" required="false" property="instance.apple_expiry" type="text"\n                errors="errors.apple_expiry"></form-input>\n    <form-input name="apple_content_available" label="Apple Content-Available" required="false" property="instance.apple_content_available" type="text"\n                errors="errors.apple_content_available"></form-input>\n    <form-input name="google_collapseKey" label="Google Collapse Key" required="false"\n                property="instance.google_collapseKey" type="text" errors="errors.google_collapseKey"></form-input>\n    <form-input name="google_delayWhileIdle" label="Google Delay While Idle" required="false"\n                property="instance.google_delayWhileIdle" type="text"\n                errors="errors.google_delayWhileIdle"></form-input>\n    <form-input name="google_timeToLive" label="Google TTL" required="false" property="instance.google_timeToLive"\n                type="text" errors="errors.google_timeToLive"></form-input>\n  </div>\n\n  <div class="form-actions list-group-item">\n    <input class="btn btn-primary" name="commit" type="submit" value="Submit" ng-click="create(instance, data.selectedChannelId)" ng-disabled="loading"/>\n    <a href="#/messaging" class="btn"> Return</a>\n  </div>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/messaging/message/show_message.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/messaging">Messages</a></li>\n  <li class="active">Message</li>\n</ul>\n\n<div class="page-header">\n  <h1>Message</h1>\n  <a class="btn btn-primary" ng-href="#/messaging/message/{{instance.id}}/edit">\n    <i class="fa fa-pencil"></i>\n    Edit\n  </a>\n</div>\n\n<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage">An unexpected error was encountered</span><span ng-if="errorMessage">{{errorMessage}}</span>\n</div>\n\n<table class="table table-striped table-hover" condensed="false" hover="true" striped="true">\n  <tbody>\n    <tr>\n      <td>Id</td>\n      <td>{{instance.id}}</td>\n    </tr>\n    <tr>\n      <td>Time</td>\n      <td>{{instance.time}}</td>\n    </tr>\n    <tr>\n      <td>Payload</td>\n      <td>{{instance.payload}}</td>\n    </tr>\n    <tr>\n      <td>Is Channel?</td>\n      <td>{{instance.isChannel}}</td>\n    </tr>\n    <tr>\n      <td>Payload</td>\n      <td>{{instance.payload}}</td>\n    </tr>\n    <tr>\n      <td>Apple Badge</td>\n      <td>{{instance.apple_badge}}</td>\n    </tr>\n    <tr>\n      <td>Apple Alert</td>\n      <td>{{instance.apple_alert}}</td>\n    </tr>\n    <tr>\n      <td>Apple Sound</td>\n      <td>{{instance.apple_sound}}</td>\n    </tr>\n    <tr>\n      <td>Apple Expiry</td>\n      <td>{{instance.apple_expiry}}</td>\n    </tr>\n    <tr>\n      <td>Apple Content-Available</td>\n      <td>{{instance.apple_content_available}}</td>\n    </tr>\n    <tr>\n      <td>Google collapseKey</td>\n      <td>{{instance.google_collapseKey}}</td>\n    </tr>\n    <tr>\n      <td>Google </td>\n      <td>{{instance.google_delayWhileIdle}}</td>\n    </tr>\n    <tr>\n      <td>Google </td>\n      <td>{{instance.google_timeToLive}}</td>\n    </tr>\n    <tr>\n      <td>Google </td>\n      <td>{{instance.google_apiKey}}</td>\n    </tr>\n  </tbody>\n</table>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/notification_logs/create.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/notification_logs">Notification logs</a></li>\n  <li class="active">New</li>\n</ul>\n\n<div class="page-header">\n  <h1>New Notification log</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/notification_logs/form.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/notification_logs/edit.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/notification_logs">Notification logs</a></li>\n  <li><a href="#/notification_logs/{{instance.id}}">Notification log</a></li>\n  <li class="active">Edit</li>\n</ul>\n\n<div class="page-header">\n  <h1>Edit Notification log</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/notification_logs/form.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/notification_logs/form.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage"> Please review the problems below</span><span ng-if="errorMessage"> {{errorMessage}}</span>\n</div>\n\n    \n        \n        \n        \n            \n            \n            <form-input name="message" label="Message" required="false" property="instance.message" type="text" errors="errors.message"></form-input>\n        \n        \n    \n        \n        \n        \n            \n            \n            <form-input name="notification_type" label="Notification type" required="false" property="instance.notification_type" type="text" errors="errors.notification_type"></form-input>\n        \n        \n    \n        \n        \n        \n            \n            \n            <form-input name="sent_at" label="Sent at" required="false" property="instance.sent_at" type="text" errors="errors.sent_at"></form-input>\n        \n        \n    \n        \n        \n        \n            \n            \n            <form-input name="user_name" label="User name" required="false" property="instance.user_name" type="text" errors="errors.user_name"></form-input>\n        \n        \n    \n\n<div class="form-actions">\n  <input class="btn btn-primary" name="commit" type="submit" value="Submit" ng-click="submit(instance)" ng-disabled="loading"/>\n  <a href="#/notification_logs" class="btn">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/notification_logs/index.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row">\n  <div class="col-md-3" ng-include src="\'templates/views/partials/sidebar.html\'">\n  </div>\n  <div class="col-md-9">\n    <ul class="breadcrumb">\n      <li>\n        <a href="#/index">Home</a>\n      </li>\n      <li class="active">Notification logs</li>\n    </ul>\n    <div class="page-header">\n      <h1>Notification logs</h1>\n      <a class="btn btn-primary" href="#/notification_logs/new">\n        <i class="fa fa-plus"></i>\n        New\n      </a>\n    </div>\n\n    <div class="alert alert-danger" ng-if="error">\n      <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n      <strong>Error.</strong><span ng-if="!errorMessage">An unexpected error was encountered</span><span ng-if="errorMessage">{{errorMessage}}</span>\n    </div>\n\n    <div class="alert" ng-if="instances.length == 0">\n      <h4>No notification logs yet</h4>\n      There are no notification logs to list.\n      <a class="btn btn-mini" href="#/notification_logs/new">Create a new one</a>\n    </div>\n\n    <div ng-if="instances.length > 0">\n      <table class="table table-striped table-hover">\n        <thead>\n          <tr>\n            <th>Message</th>\n            <th>Notification Type</th>\n            <th>Sent At</th>\n            <th>User Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="instance in instances">\n            <td><a ng-href="#/notification_logs/{{instance.id}}">{{instance.message}}</a></td>\n            <td><a ng-href="#/notification_logs/{{instance.id}}">{{instance.notification_type}}</a></td>\n            <td><a ng-href="#/notification_logs/{{instance.id}}">{{instance.sent_at}}</a></td>\n            <td><a ng-href="#/notification_logs/{{instance.id}}">{{instance.user_name}}</a></td>\n            <td class="text-center">\n              <a ng-href="#/notification_logs/{{instance.id}}/edit" rel="tooltip" title="Edit">\n                <i class="fa fa-pencil"></i>\n              </a>\n              &nbsp;\n              &nbsp;\n              <a ng-href="#/notification_logs" title="Delete" rel="tooltip nofollow" ng-click="destroy(instance)">\n                <i class="fa fa-trash-o"></i>\n              </a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <paginator></paginator>\n    </div>\n  </div>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/notification_logs/show.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/notification_logs">Notification logs</a></li>\n  <li class="active">Notification log</li>\n</ul>\n\n<div class="page-header">\n  <h1>Notification log</h1>\n  <a class="btn btn-primary" ng-href="#/notification_logs/{{instance.id}}/edit">\n    <i class="fa fa-pencil"></i>\n    Edit\n  </a>\n</div>\n\n<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage">An unexpected error was encountered</span><span ng-if="errorMessage">{{errorMessage}}</span>\n</div>\n\n<table class="table table-striped table-hover" condensed="false" hover="true" striped="true">\n  <tbody>\n    <tr>\n      <td>Id</td>\n      <td>{{instance.id}}</td>\n    </tr>\n    <tr>\n      <td>Message</td>\n      <td>{{instance.message}}</td>\n    </tr>\n    <tr>\n      <td>Notification Type</td>\n      <td>{{instance.notification_type}}</td>\n    </tr>\n    <tr>\n      <td>Sent At</td>\n      <td>{{instance.sent_at}}</td>\n    </tr>\n    <tr>\n      <td>User Name</td>\n      <td>{{instance.user_name}}</td>\n    </tr>\n  </tbody>\n</table>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/orders/create.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/orders">Orders</a></li>\n  <li class="active">New</li>\n</ul>\n\n<div class="page-header">\n  <h1>New Order</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/orders/form.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/orders/edit.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/orders">Orders</a></li>\n  <li><a href="#/orders/{{instance.id}}">Order</a></li>\n  <li class="active">Edit</li>\n</ul>\n\n<div class="page-header">\n  <h1>Edit Order</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/orders/form.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/orders/form.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage"> Please review the problems below</span><span ng-if="errorMessage"> {{errorMessage}}</span>\n</div>\n\n    \n        \n        \n        \n            \n            \n            <form-input name="desc" label="Desc" required="false" property="instance.desc" type="text" errors="errors.desc"></form-input>\n        \n        \n    \n        \n        \n        \n            \n            \n            <form-input name="name" label="Name" required="false" property="instance.name" type="text" errors="errors.name"></form-input>\n        \n        \n    \n\n<div class="form-actions">\n  <input class="btn btn-primary" name="commit" type="submit" value="Submit" ng-click="submit(instance)" ng-disabled="loading"/>\n  <a href="#/orders" class="btn">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/orders/index.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row">\n  <div class="col-md-3" ng-include src="\'templates/views/partials/sidebar.html\'">\n  </div>\n  <div class="col-md-9">\n    <ul class="breadcrumb">\n      <li>\n        <a href="#/index">Home</a>\n      </li>\n      <li class="active">Orders</li>\n    </ul>\n    <div class="page-header">\n      <h1>Orders</h1>\n      <a class="btn btn-primary" href="#/orders/new">\n        <i class="fa fa-plus"></i>\n        New\n      </a>\n    </div>\n\n    <div class="alert alert-danger" ng-if="error">\n      <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n      <strong>Error.</strong><span ng-if="!errorMessage">An unexpected error was encountered</span><span ng-if="errorMessage">{{errorMessage}}</span>\n    </div>\n\n    <div class="alert" ng-if="instances.length == 0">\n      <h4>No orders yet</h4>\n      There are no orders to list.\n      <a class="btn btn-mini" href="#/orders/new">Create a new one</a>\n    </div>\n\n    <div ng-if="instances.length > 0">\n      <table class="table table-striped table-hover">\n        <thead>\n          <tr>\n            <th>Desc</th>\n            <th>Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="instance in instances">\n            <td><a ng-href="#/orders/{{instance.id}}">{{instance.desc}}</a></td>\n            <td><a ng-href="#/orders/{{instance.id}}">{{instance.name}}</a></td>\n            <td class="text-center">\n              <a ng-href="#/orders/{{instance.id}}/edit" rel="tooltip" title="Edit">\n                <i class="fa fa-pencil"></i>\n              </a>\n              &nbsp;\n              &nbsp;\n              <a ng-href="#/orders" title="Delete" rel="tooltip nofollow" ng-click="destroy(instance)">\n                <i class="fa fa-trash-o"></i>\n              </a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <paginator></paginator>\n    </div>\n  </div>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/orders/show.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/orders">Orders</a></li>\n  <li class="active">Order</li>\n</ul>\n\n<div class="page-header">\n  <h1>Order</h1>\n  <a class="btn btn-primary" ng-href="#/orders/{{instance.id}}/edit">\n    <i class="fa fa-pencil"></i>\n    Edit\n  </a>\n</div>\n\n<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage">An unexpected error was encountered</span><span ng-if="errorMessage">{{errorMessage}}</span>\n</div>\n\n<table class="table table-striped table-hover" condensed="false" hover="true" striped="true">\n  <tbody>\n    <tr>\n      <td>Id</td>\n      <td>{{instance.id}}</td>\n    </tr>\n    <tr>\n      <td>Desc</td>\n      <td>{{instance.desc}}</td>\n    </tr>\n    <tr>\n      <td>Name</td>\n      <td>{{instance.name}}</td>\n    </tr>\n  </tbody>\n</table>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/paginator.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class=\'paginator btn-group\'>\n  <button ng-click=\'pagination.prevPage()\' type=\'button\' class=\'btn btn-default\'>Prev</button>\n  <button ng-repeat=\'page in pagination.totalPages\' ng-click=\'pagination.setPage(page)\' ng-class="{\'active btn-primary\' : page == pagination.page}" type=\'button\' class=\'btn btn-default\'>{{page}}</button>\n  <button ng-click=\'pagination.nextPage()\' type=\'button\' class=\'btn btn-default\'>Next</button>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/send_grids/create.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/send_grids">Send grids</a></li>\n  <li class="active">New</li>\n</ul>\n\n<div class="page-header">\n  <h1>New Send grid</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/send_grids/form.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/send_grids/edit.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/send_grids">Send grids</a></li>\n  <li><a href="#/send_grids/{{instance.id}}">Send grid</a></li>\n  <li class="active">Edit</li>\n</ul>\n\n<div class="page-header">\n  <h1>Edit Send grid</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/send_grids/form.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/send_grids/form.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage"> Please review the problems below</span><span ng-if="errorMessage"> {{errorMessage}}</span>\n</div>\n\n    \n        \n        \n        \n            \n            \n            <form-input name="email_from" label="Email from" required="true" property="instance.email_from" type="text" errors="errors.email_from"></form-input>\n        \n        \n    \n        \n        \n        \n            \n            \n            <form-input name="email_to" label="Email to" required="true" property="instance.email_to" type="text" errors="errors.email_to"></form-input>\n        \n        \n    \n        \n        \n        \n            \n            \n            <form-input name="message" label="Message" required="true" property="instance.message" type="text" errors="errors.message"></form-input>\n        \n        \n    \n        \n        \n        \n            \n            \n            <form-input name="subject" label="Subject" required="true" property="instance.subject" type="text" errors="errors.subject"></form-input>\n        \n        \n    \n\n<div class="form-actions">\n  <input class="btn btn-primary" name="commit" type="submit" value="Submit" ng-click="submit(instance)" ng-disabled="loading"/>\n  <a href="#/send_grids" class="btn">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/send_grids/index.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row">\n  <div class="col-md-3" ng-include src="\'templates/views/partials/sidebar.html\'">\n  </div>\n  <div class="col-md-9">\n    <ul class="breadcrumb">\n      <li>\n        <a href="#/index">Home</a>\n      </li>\n      <li class="active">Send grids</li>\n    </ul>\n    <div class="page-header">\n      <h1>Send grids</h1>\n      <a class="btn btn-primary" href="#/send_grids/new">\n        <i class="fa fa-plus"></i>\n        New\n      </a>\n    </div>\n\n    <div class="alert alert-danger" ng-if="error">\n      <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n      <strong>Error.</strong><span ng-if="!errorMessage">An unexpected error was encountered</span><span ng-if="errorMessage">{{errorMessage}}</span>\n    </div>\n\n    <div class="alert" ng-if="instances.length == 0">\n      <h4>No send grids yet</h4>\n      There are no send grids to list.\n      <a class="btn btn-mini" href="#/send_grids/new">Create a new one</a>\n    </div>\n\n    <div ng-if="instances.length > 0">\n      <table class="table table-striped table-hover">\n        <thead>\n          <tr>\n            <th>Email From</th>\n            <th>Email To</th>\n            <th>Message</th>\n            <th>Subject</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="instance in instances">\n            <td><a ng-href="#/send_grids/{{instance.id}}">{{instance.email_from}}</a></td>\n            <td><a ng-href="#/send_grids/{{instance.id}}">{{instance.email_to}}</a></td>\n            <td><a ng-href="#/send_grids/{{instance.id}}">{{instance.message}}</a></td>\n            <td><a ng-href="#/send_grids/{{instance.id}}">{{instance.subject}}</a></td>\n            <td class="text-center">\n              <a ng-href="#/send_grids/{{instance.id}}/edit" rel="tooltip" title="Edit">\n                <i class="fa fa-pencil"></i>\n              </a>\n              &nbsp;\n              &nbsp;\n              <a ng-href="#/send_grids" title="Delete" rel="tooltip nofollow" ng-click="destroy(instance)">\n                <i class="fa fa-trash-o"></i>\n              </a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <paginator></paginator>\n    </div>\n  </div>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/send_grids/show.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/send_grids">Send grids</a></li>\n  <li class="active">Send grid</li>\n</ul>\n\n<div class="page-header">\n  <h1>Send grid</h1>\n  <a class="btn btn-primary" ng-href="#/send_grids/{{instance.id}}/edit">\n    <i class="fa fa-pencil"></i>\n    Edit\n  </a>\n</div>\n\n<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage">An unexpected error was encountered</span><span ng-if="errorMessage">{{errorMessage}}</span>\n</div>\n\n<table class="table table-striped table-hover" condensed="false" hover="true" striped="true">\n  <tbody>\n    <tr>\n      <td>Id</td>\n      <td>{{instance.id}}</td>\n    </tr>\n    <tr>\n      <td>Email From</td>\n      <td>{{instance.email_from}}</td>\n    </tr>\n    <tr>\n      <td>Email To</td>\n      <td>{{instance.email_to}}</td>\n    </tr>\n    <tr>\n      <td>Message</td>\n      <td>{{instance.message}}</td>\n    </tr>\n    <tr>\n      <td>Subject</td>\n      <td>{{instance.subject}}</td>\n    </tr>\n  </tbody>\n</table>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/sidebar.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="list-group">\n  <a ng-class="linkClass(\'/notification_logs\')" class="list-group-item" href="#/notification_logs"> Notification Logs </a>\n  <a ng-class="linkClass(\'/orders\')" class="list-group-item" href="#/orders"> Orders </a>\n  <a ng-class="linkClass(\'/users\')" class="list-group-item" href="#/users"> Users </a>\n</div>';

}
return __p
};

this["JST"]["assets/templates/views/partials/signIn.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<br/>\n\n<div class="row">\n  <div class="col-md-6 col-md-offset-3">\n    <div class="panel panel-default" heading="Sign In" type="default">\n      <div class="panel-heading">\n        <h3 class="panel-title">Sign In</h3>\n      </div>\n      <div class="panel-body">\n        <form id="new_admin" accept-charset="UTF-8" class="simple_form new_admin" novalidate="novalidate">          \n          <div class="form-group email required">\n            <label class="email required control-label" for="admin_email">\n              <abbr title="required">*</abbr>\n              Email\n            </label>\n            <div>\n              <input autofocus="autofocus" class="string email required form-control" id="admin_email" size="50" type="text" ng-model="instance.email"></input>\n            </div>\n          </div>\n          <div class="form-group password optional">\n            <label class="password optional control-label" for="admin_password">Password</label>\n            <div>\n              <input class="password optional form-control" id="admin_password" size="50" type="password" ng-model="instance.password"></input>\n            </div>\n          </div>\n          <input class="btn btn-primary" name="commit" type="submit" value="Log in" ng-click="login(instance)" ng-disabled="loading"></input>\n          <p class="text-danger" ng-if="error">\n            <br/>\n            <strong>Error.</strong><span ng-if="errorMessage"> {{errorMessage}}</span><span ng-if="!errorMessage">An unexpected error was encountered</span>\n          </p>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>';

}
return __p
};

this["JST"]["assets/templates/views/partials/twilios/create.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/twilios">Twilios</a></li>\n  <li class="active">New</li>\n</ul>\n\n<div class="page-header">\n  <h1>New Twilio</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/twilios/form.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/twilios/edit.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/twilios">Twilios</a></li>\n  <li><a href="#/twilios/{{instance.id}}">Twilio</a></li>\n  <li class="active">Edit</li>\n</ul>\n\n<div class="page-header">\n  <h1>Edit Twilio</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/twilios/form.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/twilios/form.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage"> Please review the problems below</span><span ng-if="errorMessage"> {{errorMessage}}</span>\n</div>\n\n    \n        \n        \n        \n            \n            \n            <form-input name="message" label="Message" required="true" property="instance.message" type="text" errors="errors.message"></form-input>\n        \n        \n    \n        \n        \n        \n            \n            \n            <form-input name="to_phone_number" label="To phone number" required="true" property="instance.to_phone_number" type="text" errors="errors.to_phone_number"></form-input>\n        \n        \n    \n\n<div class="form-actions">\n  <input class="btn btn-primary" name="commit" type="submit" value="Submit" ng-click="submit(instance)" ng-disabled="loading"/>\n  <a href="#/twilios" class="btn">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/twilios/index.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row">\n  <div class="col-md-3" ng-include src="\'templates/views/partials/sidebar.html\'">\n  </div>\n  <div class="col-md-9">\n    <ul class="breadcrumb">\n      <li>\n        <a href="#/index">Home</a>\n      </li>\n      <li class="active">Twilios</li>\n    </ul>\n    <div class="page-header">\n      <h1>Twilios</h1>\n      <a class="btn btn-primary" href="#/twilios/new">\n        <i class="fa fa-plus"></i>\n        New\n      </a>\n    </div>\n\n    <div class="alert alert-danger" ng-if="error">\n      <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n      <strong>Error.</strong><span ng-if="!errorMessage">An unexpected error was encountered</span><span ng-if="errorMessage">{{errorMessage}}</span>\n    </div>\n\n    <div class="alert" ng-if="instances.length == 0">\n      <h4>No twilios yet</h4>\n      There are no twilios to list.\n      <a class="btn btn-mini" href="#/twilios/new">Create a new one</a>\n    </div>\n\n    <div ng-if="instances.length > 0">\n      <table class="table table-striped table-hover">\n        <thead>\n          <tr>\n            <th>Message</th>\n            <th>To Phone Number</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="instance in instances">\n            <td><a ng-href="#/twilios/{{instance.id}}">{{instance.message}}</a></td>\n            <td><a ng-href="#/twilios/{{instance.id}}">{{instance.to_phone_number}}</a></td>\n            <td class="text-center">\n              <a ng-href="#/twilios/{{instance.id}}/edit" rel="tooltip" title="Edit">\n                <i class="fa fa-pencil"></i>\n              </a>\n              &nbsp;\n              &nbsp;\n              <a ng-href="#/twilios" title="Delete" rel="tooltip nofollow" ng-click="destroy(instance)">\n                <i class="fa fa-trash-o"></i>\n              </a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <paginator></paginator>\n    </div>\n  </div>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/twilios/show.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/twilios">Twilios</a></li>\n  <li class="active">Twilio</li>\n</ul>\n\n<div class="page-header">\n  <h1>Twilio</h1>\n  <a class="btn btn-primary" ng-href="#/twilios/{{instance.id}}/edit">\n    <i class="fa fa-pencil"></i>\n    Edit\n  </a>\n</div>\n\n<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage">An unexpected error was encountered</span><span ng-if="errorMessage">{{errorMessage}}</span>\n</div>\n\n<table class="table table-striped table-hover" condensed="false" hover="true" striped="true">\n  <tbody>\n    <tr>\n      <td>Id</td>\n      <td>{{instance.id}}</td>\n    </tr>\n    <tr>\n      <td>Message</td>\n      <td>{{instance.message}}</td>\n    </tr>\n    <tr>\n      <td>To Phone Number</td>\n      <td>{{instance.to_phone_number}}</td>\n    </tr>\n  </tbody>\n</table>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/users/create.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/users">Users</a></li>\n  <li class="active">New</li>\n</ul>\n\n<div class="page-header">\n  <h1>New User</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/users/form.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/users/edit.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/users">Users</a></li>\n  <li><a href="#/users/{{instance.id}}">User</a></li>\n  <li class="active">Edit</li>\n</ul>\n\n<div class="page-header">\n  <h1>Edit User</h1>\n</div>\n\n<form novalidate class="simple-form simple_form form-horizontal" ng-include src="\'templates/views/partials/users/form.html\'">\n</form>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/users/form.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage"> Please review the problems below</span><span ng-if="errorMessage"> {{errorMessage}}</span>\n</div>\n\n    \n        \n        \n        \n            <form-input name="email_address" label="Email address" required="false" property="instance.email_address" type="text" errors="errors.email_address"></form-input>\n        \n    \n        \n        \n        \n            <form-input name="password" label="Password" required="false" property="instance.password" type="password" errors="errors.password"></form-input>\n        \n    \n        \n        \n        \n            <form-input name="password_confirmation" label="Password confirmation" required="false" property="instance.password_confirmation" type="password" errors="errors.password_confirmation"></form-input>\n        \n    \n        \n        \n        \n    \n        \n        \n        \n            <form-input name="phone_number" label="Phone number" required="false" property="instance.phone_number" type="text" errors="errors.phone_number"></form-input>\n        \n    \n        \n        \n        \n            <form-input name="role" label="Role" required="false" property="instance.role" type="text" errors="errors.role"></form-input>\n        \n    \n        \n        \n        \n            <form-input name="send_push_notifications" label="Send push notifications" required="false" property="instance.send_push_notifications" type="checkbox" errors="errors.send_push_notifications"></form-input>\n        \n    \n        \n        \n        \n            <form-input name="send_sendgrid_notifications" label="Send sendgrid notifications" required="false" property="instance.send_sendgrid_notifications" type="checkbox" errors="errors.send_sendgrid_notifications"></form-input>\n        \n    \n        \n        \n        \n            <form-input name="send_twilio_notifications" label="Send twilio notifications" required="false" property="instance.send_twilio_notifications" type="checkbox" errors="errors.send_twilio_notifications"></form-input>\n        \n    \n        \n        \n        \n            <form-input name="username" label="Username" required="false" property="instance.username" type="text" errors="errors.username"></form-input>\n        \n    \n        \n        \n        \n            <form-input name="x_session_id" label="X session" required="false" property="instance.x_session_id" type="text" errors="errors.x_session_id"></form-input>\n        \n    \n\n<div class="form-actions">\n  <input class="btn btn-primary" name="commit" type="submit" value="Submit" ng-click="submit(instance)" ng-disabled="loading"/>\n  <a href="#/users" class="btn">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/users/index.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row">\n  <div class="col-md-3" ng-include src="\'templates/views/partials/sidebar.html\'">\n  </div>\n  <div class="col-md-9">\n    <ul class="breadcrumb">\n      <li>\n        <a href="#/index">Home</a>\n      </li>\n      <li class="active">Users</li>\n    </ul>\n    <div class="page-header">\n      <h1>Users</h1>\n      <a class="btn btn-primary" href="#/users/new">\n        <i class="fa fa-plus"></i>\n        New\n      </a>\n    </div>\n\n    <div class="alert alert-danger" ng-if="error">\n      <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n      <strong>Error.</strong><span ng-if="!errorMessage">An unexpected error was encountered</span><span ng-if="errorMessage">{{errorMessage}}</span>\n    </div>\n\n    <div class="alert" ng-if="instances.length == 0">\n      <h4>No users yet</h4>\n      There are no users to list.\n      <a class="btn btn-mini" href="#/users/new">Create a new one</a>\n    </div>\n\n    <div ng-if="instances.length > 0">\n      <table class="table table-striped table-hover">\n        <thead>\n          <tr>\n            <th>Email Address</th>\n            <th>Password</th>\n            <th>Password Confirmation</th>\n            <th>Password Digest</th>\n            <th>Phone Number</th>\n            <th>Role</th>\n            <th>Send Push Notifications</th>\n            <th>Send Sendgrid Notifications</th>\n            <th>Send Twilio Notifications</th>\n            <th>Username</th>\n            <th>X Session</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="instance in instances">\n            <td><a ng-href="#/users/{{instance.id}}">{{instance.email_address}}</a></td>\n            <td><a ng-href="#/users/{{instance.id}}">{{instance.password}}</a></td>\n            <td><a ng-href="#/users/{{instance.id}}">{{instance.password_confirmation}}</a></td>\n            <td><a ng-href="#/users/{{instance.id}}">{{instance.password_digest}}</a></td>\n            <td><a ng-href="#/users/{{instance.id}}">{{instance.phone_number}}</a></td>\n            <td><a ng-href="#/users/{{instance.id}}">{{instance.role}}</a></td>\n            <td><a ng-href="#/users/{{instance.id}}">{{instance.send_push_notifications}}</a></td>\n            <td><a ng-href="#/users/{{instance.id}}">{{instance.send_sendgrid_notifications}}</a></td>\n            <td><a ng-href="#/users/{{instance.id}}">{{instance.send_twilio_notifications}}</a></td>\n            <td><a ng-href="#/users/{{instance.id}}">{{instance.username}}</a></td>\n            <td><a ng-href="#/users/{{instance.id}}">{{instance.x_session_id}}</a></td>\n            <td class="text-center">\n              <a ng-href="#/users/{{instance.id}}/edit" rel="tooltip" title="Edit">\n                <i class="fa fa-pencil"></i>\n              </a>\n              &nbsp;\n              &nbsp;\n              <a ng-href="#/users" title="Delete" rel="tooltip nofollow" ng-click="destroy(instance)">\n                <i class="fa fa-trash-o"></i>\n              </a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <paginator></paginator>\n    </div>\n  </div>\n</div>\n';

}
return __p
};

this["JST"]["assets/templates/views/partials/users/show.html"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="breadcrumb">\n  <li><a href="#/index">Home</a></li>\n  <li><a href="#/users">Users</a></li>\n  <li class="active">User</li>\n</ul>\n\n<div class="page-header">\n  <h1>User</h1>\n  <a class="btn btn-primary" ng-href="#/users/{{instance.id}}/edit">\n    <i class="fa fa-pencil"></i>\n    Edit\n  </a>\n</div>\n\n<div class="alert alert-danger" ng-if="error">\n  <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>\n  <strong>Error.</strong><span ng-if="!errorMessage">An unexpected error was encountered</span><span ng-if="errorMessage">{{errorMessage}}</span>\n</div>\n\n<table class="table table-striped table-hover" condensed="false" hover="true" striped="true">\n  <tbody>\n    <tr>\n      <td>Id</td>\n      <td>{{instance.id}}</td>\n    </tr>\n    <tr>\n      <td>Email Address</td>\n      <td>{{instance.email_address}}</td>\n    </tr>\n    <tr>\n      <td>Password</td>\n      <td>{{instance.password}}</td>\n    </tr>\n    <tr>\n      <td>Password Confirmation</td>\n      <td>{{instance.password_confirmation}}</td>\n    </tr>\n    <tr>\n      <td>Password Digest</td>\n      <td>{{instance.password_digest}}</td>\n    </tr>\n    <tr>\n      <td>Phone Number</td>\n      <td>{{instance.phone_number}}</td>\n    </tr>\n    <tr>\n      <td>Role</td>\n      <td>{{instance.role}}</td>\n    </tr>\n    <tr>\n      <td>Send Push Notifications</td>\n      <td>{{instance.send_push_notifications}}</td>\n    </tr>\n    <tr>\n      <td>Send Sendgrid Notifications</td>\n      <td>{{instance.send_sendgrid_notifications}}</td>\n    </tr>\n    <tr>\n      <td>Send Twilio Notifications</td>\n      <td>{{instance.send_twilio_notifications}}</td>\n    </tr>\n    <tr>\n      <td>Username</td>\n      <td>{{instance.username}}</td>\n    </tr>\n    <tr>\n      <td>X Session</td>\n      <td>{{instance.x_session_id}}</td>\n    </tr>\n  </tbody>\n</table>\n';

}
return __p
};